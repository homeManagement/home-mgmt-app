{"version":3,"sources":["app.js","controllers/contactCtrl.js","controllers/createPropertyCtrl.js","controllers/homeCtrl.js","controllers/mainAlertsCtrl.js","controllers/propertiesCtrl.js","controllers/userSettingsCtrl.js","directive/createTask.js","directive/editTasks.js","directive/editTasksForm.js","directive/header.js","directive/login.js","directive/logout.js","directive/propertyForm.js","directive/propertySettings.js","directive/serverError.js","directive/signup.js","directive/taskSelection.js","services/mainService.js"],"names":["angular","module","config","$stateProvider","$urlRouterProvider","$authProvider","otherwise","state","url","controller","templateUrl","restricted","params","propertyId","loginUrl","signUpUrl","facebook","clientId","responseType","name","authorizationEndpoint","redirectUri","window","location","origin","requiredUrlParams","scope","scopeDelimiter","display","oauthType","popupOptions","width","height","run","$rootScope","$state","$window","$auth","$on","e","to","isAuthenticated","go","$scope","mainService","propertyFromVisibility","taskSelectionVisibility","customTaskVisibility","property","token","localStorage","satellizer_token","typeId","send","createProperty","then","res","getDefaultTasks","tasks","createTasks","selectedTask","filter","currentValue","selected","insertTasks","status","console","log","alert","cnt","texts","$","each","html","slide","length","fadeIn","animate","opacity","fadeOut","$stateParams","getPropertyTasks","propertyTasks","inactive","done","propertymaintenanceid","alertid","snooze","$swipe","propDeleteButtonVisibility","propDeleteConfirmVisiblity","getProperties","properties","deleteProperty","currentProp","id","getUserById","user","updateFirstName","newFirstName","firstname","firstNameEdit","updateLastName","newLastName","last_name","lastNameEdit","phoneNumberStyle","newPhone","Number","isInteger","key","split","splice","join","updatePhone","replace","phone_number","phoneEdit","updatePassword","newPassword","password","directive","element","task","season","createTask","dayInterval","createCustomTask","after","lastDate","outdoor","notes","restrict","link","editFormVisibility","taskOverlayVisibility","map","nextdate","substr","lastdate","deleteTask","newTask","data","push","editTaskObj","maintName","editTask","nextDate","document","ready","click","toggleClass","showLogin","modalFunc","menuShowing","toggleMenu","animationEnd","addClass","one","removeClass","prev","find","event","toState","toParams","fromState","fromParams","options","current","viewname","authenticate","provider","response","catch","emailLogin","login","email","errorMessage","loginForm","$setValidity","message","logout","template","getPropertySettings","propertyCheckBox","value1","value2","value3","update","property_settings","text","weather","updatePropertySettings","require","attrs","ctrl","on","phone","signUp","firstName","lastName","signup","showSignUp","modalSignUpFunc","service","$http","method"],"mappings":";;AACAA,QAAAC,MAAA,CAAA,SAAA,EAAA,CAAA,WAAA,EAAA,YAAA,EAAA,WAAA,EAAA,SAAA,CAAA,EACAC,MADA,CACA,UAAAC,cAAA,EAAAC,kBAAA,EAAAC,aAAA,EAAA;AACAD,qBAAAE,SAAA,CAAA,GAAA;AACAH,iBAEAI,KAFA,CAEA,MAFA,EAEA;AACAC,SAAA,GADA;AAEAC,gBAAA,UAFA;AAGAC,iBAAA,uBAHA;AAIAC,gBAAA;AAJA,GAFA,EAQAJ,KARA,CAQA,YARA,EAQA;AACAC,SAAA,aADA;AAEAC,gBAAA,gBAFA;AAGAC,iBAAA,6BAHA;AAIAC,gBAAA;AAJA,GARA,EAcAJ,KAdA,CAcA,gBAdA,EAcA;AACAC,SAAA,iBADA;AAEAC,gBAAA,oBAFA;AAGAC,iBAAA,iCAHA;AAIAC,gBAAA;AAJA,GAdA,EAoBAJ,KApBA,CAoBA,YApBA,EAoBA;AACAC,SAAA,cADA;AAEAC,gBAAA,gBAFA;AAGAC,iBAAA,6BAHA;AAIAC,gBAAA,IAJA;AAKAC,YAAA,EAAAC,YAAA,IAAA;AALA,GApBA,EA2BAN,KA3BA,CA2BA,cA3BA,EA2BA;AACAC,SAAA,eADA;AAEAC,gBAAA,kBAFA;AAGAC,iBAAA,+BAHA;AAIAC,gBAAA;AAJA,GA3BA,EAiCAJ,KAjCA,CAiCA,kBAjCA,EAiCA;AACAC,SAAA,mBADA;AAEAE,iBAAA,mCAFA;AAGAC,gBAAA,IAHA;AAIAC,YAAA,EAAAC,YAAA,IAAA;AAJA,GAjCA,EAuCAN,KAvCA,CAuCA,SAvCA,EAuCA;AACAC,SAAA,UADA;AAEAC,gBAAA,aAFA;AAGAC,iBAAA,0BAHA;AAIAC,gBAAA;AAJA,GAvCA,EA6CAJ,KA7CA,CA6CA,OA7CA,EA6CA;AACAC,SAAA,QADA;AAEAE,iBAAA,wBAFA;AAGAC,gBAAA;AAHA,GA7CA,EAkDAJ,KAlDA,CAkDA,QAlDA,EAkDA;AACAC,SAAA,SADA;AAEAE,iBAAA,yBAFA;AAGAC,gBAAA;AAHA,GAlDA;AAuDAN,gBAAAS,QAAA,GAAA,aAAA;AACAT,gBAAAU,SAAA,GAAA,cAAA;AACAV,gBAAAW,QAAA,CAAA;AACAC,cAAA,kBADA;AAEAC,kBAAA,MAFA;AAGAC,UAAA,UAHA;AAIAX,SAAA,gBAJA;AAKAY,2BAAA,4CALA;AAMAC,iBAAAC,OAAAC,QAAA,CAAAC,MAAA,GAAA,aANA;AAOAC,uBAAA,CAAA,OAAA,CAPA;AAQAC,WAAA,CAAA,OAAA,CARA;AASAC,oBAAA,GATA;AAUAC,aAAA,OAVA;AAWAC,eAAA,KAXA;AAYAC,kBAAA,EAAAC,OAAA,GAAA,EAAAC,QAAA,GAAA;AAZA,GAAA;AAcA,CA1EA,EA2EAC,GA3EA,CA2EA,UAAAC,UAAA,EAAAC,MAAA,EAAAC,OAAA,EAAAC,KAAA,EAAA;AACAH,aAAAI,GAAA,CAAA,mBAAA,EAAA,UAAAC,CAAA,EAAAC,EAAA,EAAA;AACA;AACA;AACA,QAAA,CAAAA,GAAA7B,UAAA,EAAA;;AAEA,QAAA0B,MAAAI,eAAA,EAAA,EAAA,OAAA,KACAN,OAAAO,EAAA,CAAA,MAAA;AAGA,GATA;AAUA,CAtFA;;ACDA1C,QAAAC,MAAA,CAAA,SAAA,EACAQ,UADA,CACA,aADA,EACA,UAAAkC,MAAA,EAAAC,WAAA,EAAA,CAGA,CAJA;;ACAA5C,QAAAC,MAAA,CAAA,SAAA,EACAQ,UADA,CACA,oBADA,EACA,UAAAkC,MAAA,EAAAC,WAAA,EAAAR,OAAA,EAAAD,MAAA,EAAA;;AAEAQ,SAAAE,sBAAA,GAAA,IAAA;AACAF,SAAAG,uBAAA,GAAA,KAAA;AACAH,SAAAI,oBAAA,GAAA,KAAA;;AAEAJ,SAAAK,QAAA,GAAA;AACAC,WAAAb,QAAAc,YAAA,CAAAC,gBADA;AAEAC,YAAA;AAFA,GAAA;;AAKAT,SAAAU,IAAA,GAAA,UAAAL,QAAA,EAAA;AACAJ,gBAAAU,cAAA,CAAAN,QAAA,EAAAO,IAAA,CAAA,UAAAC,GAAA,EAAA;AACAb,aAAA9B,UAAA,GAAA2C,IAAA,CAAA,EAAA,IAAA,CAAA;AACAb,aAAAE,sBAAA,GAAA,KAAA;AACAF,aAAAG,uBAAA,GAAA,IAAA;;AAEAF,kBAAAa,eAAA,CAAAd,OAAA9B,UAAA,EAAA0C,IAAA,CAAA,UAAAC,GAAA,EAAA;AACAb,eAAAe,KAAA,GAAAF,GAAA;AACA,OAFA;AAGA,KARA;AASA,GAVA;;AAYAb,SAAAgB,WAAA,GAAA,UAAAD,KAAA,EAAA;AACA,QAAAE,eAAAF,MAAAG,MAAA,CAAA,UAAAC,YAAA,EAAA;AACAA,mBAAAjD,UAAA,GAAA8B,OAAA9B,UAAA;AACA,aAAAiD,aAAAC,QAAA,KAAA,KAAA;AACA,KAHA,CAAA;AAIAnB,gBAAAoB,WAAA,CAAAJ,YAAA,EAAAL,IAAA,CAAA,UAAAC,GAAA,EAAA;AACA,UAAAA,IAAAS,MAAA,KAAA,GAAA,EAAA;AACAC,gBAAAC,GAAA,CAAAxB,OAAA9B,UAAA;AACAsB,eAAAO,EAAA,CAAA,YAAA,EAAA,EAAA7B,YAAA8B,OAAA9B,UAAA,EAAA;AACA,OAHA,MAIA;AACAuD,cAAA,2BAAA;AACA;AAEA,KATA;AAUA,GAfA;AAgBA,CAxCA;;ACAApE,QAAAC,MAAA,CAAA,SAAA,EACAQ,UADA,CACA,UADA,EACA,UAAAkC,MAAA,EAAAC,WAAA,EAAA;;AAEA,MAAAyB,MAAA,CAAA;AAAA,MAAAC,QAAA,EAAA;;AAEA;AACAC,IAAA,cAAA,EAAAC,IAAA,CAAA,YAAA;AACAF,UAAAD,KAAA,IAAAE,EAAA,IAAA,EAAAE,IAAA,EAAA;AACA,GAFA;AAGA,WAAAC,KAAA,GAAA;AACA,QAAAL,OAAAC,MAAAK,MAAA,EAAAN,MAAA,CAAA;AACAE,MAAA,cAAA,EAAAE,IAAA,CAAAH,MAAAD,KAAA,CAAA;AACAE,MAAA,cAAA,EACAK,MADA,CACA,MADA,EACAC,OADA,CACA,EAAAC,SAAA,GAAA,EADA,EACA,IADA,EACAC,OADA,CACA,MADA,EAEA,YAAA;AACA,aAAAL,OAAA;AACA,KAJA;AAMA;AACAA;AAEA,CArBA;;ACAA1E,QAAAC,MAAA,CAAA,SAAA,EACAQ,UADA,CACA,gBADA,EACA,UAAAkC,MAAA,EAAAC,WAAA,EAAAoC,YAAA,EAAA5C,OAAA,EAAA;AACA,MAAA4C,aAAAnE,UAAA,EAAA;AACAuB,YAAAc,YAAA,CAAArC,UAAA,GAAAmE,aAAAnE,UAAA;AACA8B,WAAA9B,UAAA,GAAAmE,aAAAnE,UAAA;AACA,GAHA,MAIA,IAAA,CAAAmE,aAAAnE,UAAA,EAAA;AACA8B,WAAA9B,UAAA,GAAAuB,QAAAc,YAAA,CAAArC,UAAA;AACA;;AAEA8B,SAAAsC,gBAAA,GAAA,UAAApE,UAAA,EAAA;AACA+B,gBAAAqC,gBAAA,CAAApE,UAAA,EACA0C,IADA,CACA,UAAAC,GAAA,EAAA;AACAb,aAAAuC,aAAA,GAAA1B,IAAAK,MAAA,CAAA,UAAAC,YAAA,EAAA;AACA,eAAAA,aAAAqB,QAAA,KAAA,KAAA;AACA,OAFA,CAAA;AAGA,KALA;AAMA,GAPA;;AASAxC,SAAAsC,gBAAA,CAAAtC,OAAA9B,UAAA;;AAEA8B,SAAAyC,IAAA,GAAA,UAAAC,qBAAA,EAAAC,OAAA,EAAA;AACA1C,gBAAAwC,IAAA,CAAAC,qBAAA,EAAAC,OAAA,EACA/B,IADA,CACA,UAAAC,GAAA,EAAA;AACAb,aAAAsC,gBAAA,CAAAtC,OAAA9B,UAAA;AACA,KAHA;AAIA,GALA;AAMA8B,SAAA4C,MAAA,GAAA,UAAAD,OAAA,EAAA;AACA1C,gBAAA2C,MAAA,CAAAD,OAAA,EACA/B,IADA,CACA,UAAAC,GAAA,EAAA;AACAb,aAAAsC,gBAAA,CAAAtC,OAAA9B,UAAA;AACA,KAHA;AAIA,GALA;AAQA,CAnCA;;ACAAb,QAAAC,MAAA,CAAA,SAAA,EACAQ,UADA,CACA,gBADA,EACA,UAAAkC,MAAA,EAAAP,OAAA,EAAAQ,WAAA,EAAA4C,MAAA,EAAA;;AAEA7C,SAAA8C,0BAAA,GAAA,KAAA;AACA9C,SAAA+C,0BAAA,GAAA,KAAA;;AAEA/C,SAAAgD,aAAA,GAAA,UAAA1C,KAAA,EAAA;AACAL,gBAAA+C,aAAA,CAAA1C,KAAA,EACAM,IADA,CACA,UAAAC,GAAA,EAAA;AACAb,aAAAiD,UAAA,GAAApC,GAAA;AACA,KAHA;AAIA,GALA;AAMAb,SAAAgD,aAAA,CAAAvD,QAAAc,YAAA,CAAAC,gBAAA;;AAEAR,SAAAkD,cAAA,GAAA,UAAAhF,UAAA,EAAA;AACA+B,gBAAAiD,cAAA,CAAAhF,UAAA,EAAA0C,IAAA,CAAA,UAAAC,GAAA,EAAA;AACAb,aAAAiD,UAAA,GAAAjD,OAAAiD,UAAA,CAAA/B,MAAA,CAAA,UAAAiC,WAAA,EAAA;AACA,eAAAA,YAAAC,EAAA,KAAAlF,UAAA;AACA,OAFA,CAAA;AAGA,KAJA;AAKA,GANA;AAQA,CAtBA;;ACAAb,QAAAC,MAAA,CAAA,SAAA,EACAQ,UADA,CACA,kBADA,EACA,UAAAkC,MAAA,EAAAC,WAAA,EAAAR,OAAA,EAAA;;AAEAO,SAAAqD,WAAA,GAAA,UAAA/C,KAAA,EAAA;AACAL,gBAAAoD,WAAA,CAAA/C,KAAA,EACAM,IADA,CACA,UAAAC,GAAA,EAAA;AACAb,aAAAsD,IAAA,GAAAzC,IAAA,CAAA,CAAA;AACA,KAHA;AAIA,GALA;AAMAb,SAAAqD,WAAA,CAAA5D,QAAAc,YAAA,CAAAC,gBAAA;;AAEAR,SAAAuD,eAAA,GAAA,UAAAC,YAAA,EAAA;AACAvD,gBAAAsD,eAAA,CAAAvD,OAAAsD,IAAA,CAAAF,EAAA,EAAAI,YAAA,EACA5C,IADA,CACA,UAAAC,GAAA,EAAA;AACAb,aAAAsD,IAAA,CAAAG,SAAA,GAAAD,YAAA;AACAxD,aAAA0D,aAAA,GAAA,KAAA;AACA1D,aAAAwD,YAAA,GAAA,EAAA;AACA,KALA;AAMA,GAPA;AAQAxD,SAAA2D,cAAA,GAAA,UAAAC,WAAA,EAAA;AACA3D,gBAAA0D,cAAA,CAAA3D,OAAAsD,IAAA,CAAAF,EAAA,EAAAQ,WAAA,EACAhD,IADA,CACA,UAAAC,GAAA,EAAA;AACAb,aAAAsD,IAAA,CAAAO,SAAA,GAAAD,WAAA;AACA5D,aAAA8D,YAAA,GAAA,KAAA;AACA9D,aAAA4D,WAAA,GAAA,EAAA;AACA,KALA;AAMA,GAPA;AAQA;AACA5D,SAAA+D,gBAAA,GAAA,UAAAnE,CAAA,EAAA;;AAEA,QAAAI,OAAAgE,QAAA,CAAAhC,MAAA,KAAA,CAAA,EAAA;AACAhC,aAAAgE,QAAA,GAAA,MAAAhE,OAAAgE,QAAA;AACA;AACA,QAAA,CAAAC,OAAAC,SAAA,CAAAD,OAAArE,EAAAuE,GAAA,CAAA,CAAA,EAAA;AACAnE,aAAAgE,QAAA,GAAAhE,OAAAgE,QAAA,CAAAI,KAAA,CAAA,EAAA,EAAAC,MAAA,CAAA,CAAA,EAAArE,OAAAgE,QAAA,CAAAhC,MAAA,GAAA,CAAA,EAAAsC,IAAA,CAAA,EAAA,CAAA;AACA;AACA,QAAAtE,OAAAgE,QAAA,CAAAhC,MAAA,KAAA,CAAA,EAAA;AACAhC,aAAAgE,QAAA,GAAAhE,OAAAgE,QAAA,GAAA,GAAA;AACA;AACA,QAAAhE,OAAAgE,QAAA,CAAAhC,MAAA,KAAA,CAAA,EAAA;AACAhC,aAAAgE,QAAA,GAAAhE,OAAAgE,QAAA,GAAA,GAAA;AACA;AACA,QAAAhE,OAAAgE,QAAA,CAAAhC,MAAA,KAAA,EAAA,EAAA;AACAhC,aAAAgE,QAAA,GAAAhE,OAAAgE,QAAA,CAAAI,KAAA,CAAA,EAAA,EAAAC,MAAA,CAAA,CAAA,EAAArE,OAAAgE,QAAA,CAAAhC,MAAA,GAAA,CAAA,EAAAsC,IAAA,CAAA,EAAA,CAAA;AACA;AACA,GAjBA;;AAmBAtE,SAAAuE,WAAA,GAAA,UAAAP,QAAA,EAAA;AACAA,eAAAA,SAAAQ,OAAA,CAAA,KAAA,EAAA,EAAA,CAAA;AACAvE,gBAAAsE,WAAA,CAAAvE,OAAAsD,IAAA,CAAAF,EAAA,EAAAY,QAAA,EACApD,IADA,CACA,UAAAC,GAAA,EAAA;AACAb,aAAAsD,IAAA,CAAAmB,YAAA,GAAAT,QAAA;AACAhE,aAAA0E,SAAA,GAAA,KAAA;AACA1E,aAAAgE,QAAA,GAAA,EAAA;AACA,KALA;AAMA,GARA;;AAUAhE,SAAA2E,cAAA,GAAA,UAAAC,WAAA,EAAA;AACA3E,gBAAA0E,cAAA,CAAA3E,OAAAsD,IAAA,CAAAF,EAAA,EAAAwB,WAAA,EACAhE,IADA,CACA,UAAAC,GAAA,EAAA;AACAb,aAAAsD,IAAA,CAAAuB,QAAA,GAAAD,WAAA;AACA5E,aAAA4E,WAAA,GAAA,EAAA;AACA,KAJA;AAKA,GANA;AASA,CAlEA;;ACAAvH,QAAAC,MAAA,CAAA,SAAA,EAAAwH,SAAA,CAAA,YAAA,EAAA,UAAA7E,WAAA,EAAAR,OAAA,EAAA;;AAEA,MAAA3B,aAAA,SAAAA,UAAA,CAAAiB,KAAA,EAAAgG,OAAA,EAAA;AACAhG,UAAAiG,IAAA,GAAA;AACAC,cAAA;AADA,KAAA;;AAIAlG,UAAAmG,UAAA,GAAA,UAAAhH,UAAA,EAAA8G,IAAA,EAAA;AACA,UAAA,CAAA9G,UAAA,EAAA;AACA8G,aAAA9G,UAAA,GAAAuB,QAAAc,YAAA,CAAArC,UAAA;AACA,OAFA,MAGA;AACA8G,aAAA9G,UAAA,GAAAA,UAAA;AACA;;AAEA,cAAA8G,KAAAC,MAAA;AACA,aAAA,SAAA;AACAD,eAAAG,WAAA,GAAA,EAAA;AACA;AACA,aAAA,WAAA;AACAH,eAAAG,WAAA,GAAA,EAAA;AACA;AACA,aAAA,YAAA;AACAH,eAAAG,WAAA,GAAA,GAAA;AACA;AACA,aAAA,UAAA;AACAH,eAAAG,WAAA,GAAA,GAAA;AACA;AACA;AACAH,eAAAG,WAAA,GAAAH,KAAAG,WAAA;AAdA;;AAiBAlF,kBAAAmF,gBAAA,CAAAJ,IAAA,EAAApE,IAAA,CAAA,UAAAC,GAAA,EAAA;;AAEAkE,gBAAAM,KAAA,CAAA,oCAAAtG,MAAAiG,IAAA,CAAAxG,IAAA,GAAA,eAAA,GAAAO,MAAAiG,IAAA,CAAAM,QAAA,GAAA,eAAA,GAAAvG,MAAAiG,IAAA,CAAAC,MAAA,GAAA,eAAA,GAAAlG,MAAAiG,IAAA,CAAAG,WAAA,GAAA,eAAA,GAAApG,MAAAiG,IAAA,CAAAO,OAAA,GAAA,eAAA,GAAAxG,MAAAiG,IAAA,CAAAQ,KAAA,GAAA,eAAA;;AAEAzG,cAAAiG,IAAA,GAAA;AACAxG,gBAAA,IADA;AAEAyG,kBAAA,IAFA;AAGAK,oBAAA,IAHA;AAIAH,uBAAA,IAJA;AAKAI,mBAAA,KALA;AAMAC,iBAAA;AANA,SAAA;AAQA,OAZA;AAcA,KAvCA;AAwCA,GA7CA;;AAiDA,SAAA;AACAC,cAAA,IADA;AAEA1G,WAAA;AACAb,kBAAA;AADA,KAFA;AAKAH,iBAAA,+CALA;AAMA2H,UAAA5H;;AANA,GAAA;AAWA,CA9DA;;ACAAT,QAAAC,MAAA,CAAA,SAAA,EAAAwH,SAAA,CAAA,WAAA,EAAA,UAAAzC,YAAA,EAAA;;AAEA,MAAAvE,aAAA,SAAAA,UAAA,CAAAkC,MAAA,EAAAC,WAAA,EAAAR,OAAA,EAAA;AACA,QAAA,CAAA4C,aAAAnE,UAAA,EAAA;AACA8B,aAAA9B,UAAA,GAAAuB,QAAAc,YAAA,CAAArC,UAAA;AACA,KAFA,MAGA;AACA8B,aAAA9B,UAAA,GAAAmE,aAAAnE,UAAA;AACA;;AAEA8B,WAAA2F,kBAAA,GAAA,KAAA;AACA3F,WAAA4F,qBAAA,GAAA,KAAA;;AAEA3F,gBAAAqC,gBAAA,CAAAtC,OAAA9B,UAAA,EAAA0C,IAAA,CAAA,UAAAC,GAAA,EAAA;AACAA,UAAAgF,GAAA,CAAA,UAAA1E,YAAA,EAAA;AACAA,qBAAA2E,QAAA,GAAA3E,aAAA2E,QAAA,CAAAC,MAAA,CAAA,CAAA,EAAA,EAAA,CAAA;AACA5E,qBAAA6E,QAAA,GAAA7E,aAAA6E,QAAA,CAAAD,MAAA,CAAA,CAAA,EAAA,EAAA,CAAA;AACA,OAHA;AAIA/F,aAAAe,KAAA,GAAAF,GAAA;AACA,KANA;;AAQAb,WAAAiG,UAAA,GAAA,UAAAvD,qBAAA,EAAA;AACAzC,kBAAAgG,UAAA,CAAAvD,qBAAA,EAAA9B,IAAA,CAAA,UAAAC,GAAA,EAAA;AACAb,eAAAe,KAAA,GAAAf,OAAAe,KAAA,CAAAG,MAAA,CAAA,UAAAC,YAAA,EAAA;AACA,iBAAAA,aAAAuB,qBAAA,KAAAA,qBAAA;AACA,SAFA,CAAA;AAGA,OAJA;AAKA,KANA;;AAQA1C,WAAAkF,UAAA,GAAA,UAAAhH,UAAA,EAAA8G,IAAA,EAAA;AACA,UAAA,CAAA9G,UAAA,EAAA;AACA8G,aAAA9G,UAAA,GAAAuB,QAAAc,YAAA,CAAArC,UAAA;AACA,OAFA,MAGA;AACA8G,aAAA9G,UAAA,GAAAA,UAAA;AACA;;AAEA,cAAA8G,KAAAC,MAAA;AACA,aAAA,SAAA;AACAD,eAAAG,WAAA,GAAA,EAAA;AACA;AACA,aAAA,WAAA;AACAH,eAAAG,WAAA,GAAA,EAAA;AACA;AACA,aAAA,YAAA;AACAH,eAAAG,WAAA,GAAA,GAAA;AACA;AACA,aAAA,UAAA;AACAH,eAAAG,WAAA,GAAA,GAAA;AACA;AACA;AACAH,eAAAG,WAAA,GAAAH,KAAAG,WAAA;AAdA;;AAiBAlF,kBAAAmF,gBAAA,CAAAJ,IAAA,EAAApE,IAAA,CAAA,UAAAC,GAAA,EAAA;AACA,YAAAqF,UAAArF,IAAAsF,IAAA,CAAA,CAAA,CAAA;AACAD,gBAAA,aAAA,IAAAA,QAAA,cAAA,CAAA;AACAA,gBAAA,UAAA,IAAAA,QAAA,WAAA,EAAAH,MAAA,CAAA,CAAA,EAAA,EAAA,CAAA;AACAG,gBAAA,UAAA,IAAAA,QAAA,WAAA,EAAAH,MAAA,CAAA,CAAA,EAAA,EAAA,CAAA;AACA,eAAAG,QAAA,WAAA,CAAA;AACA,eAAAA,QAAA,WAAA,CAAA;;AAEAlG,eAAAe,KAAA,CAAAqF,IAAA,CAAAF,OAAA;;AAEAlG,eAAAkG,OAAA,GAAA;AACA1H,gBAAA,IADA;AAEAyG,kBAAA,IAFA;AAGAK,oBAAA,IAHA;AAIAH,uBAAA,IAJA;AAKAI,mBAAA,KALA;AAMAC,iBAAA;AANA,SAAA;AAQA,OAlBA;AAmBA,KA5CA;AA8CA,GAzEA;;AA6EA,SAAA;AACAC,cAAA,IADA;AAEA3H,gBAAAA,UAFA;AAGAC,iBAAA;;AAHA,GAAA;AAQA,CAvFA;;ACAAV,QAAAC,MAAA,CAAA,SAAA,EAAAwH,SAAA,CAAA,eAAA,EAAA,UAAA7E,WAAA,EAAA;;AAEA,MAAAyF,OAAA,SAAAA,IAAA,CAAA3G,KAAA,EAAA;AACAA,UAAAsH,WAAA,GAAA,EAAA;AACAtH,UAAAsH,WAAA,CAAAC,SAAA,GAAAvH,MAAAiG,IAAA,CAAAxG,IAAA;;AAEAO,UAAAwH,QAAA,GAAA,UAAAvB,IAAA,EAAA;AACA,UAAA,CAAAA,IAAA,EAAA;AACAA,eAAA,EAAA;AACA;AACA;AACAA,WAAA,UAAA,IAAAjG,MAAAiG,IAAA,CAAAxC,QAAA;AACAwC,WAAA,SAAA,IAAAjG,MAAAiG,IAAA,CAAAO,OAAA;AACAP,WAAA,QAAA,IAAAjG,MAAAiG,IAAA,CAAAC,MAAA;AACAD,WAAA,aAAA,IAAAjG,MAAAiG,IAAA,CAAAG,WAAA;AACAH,WAAA,OAAA,IAAAjG,MAAAiG,IAAA,CAAAQ,KAAA;AACAvF,kBAAAsG,QAAA,CAAAxH,MAAAiG,IAAA,CAAAtC,qBAAA,EAAAsC,IAAA,EAAApE,IAAA,CAAA,UAAAC,GAAA,EAAA;AACA,YAAAA,GAAA,EAAA;AACA9B,gBAAAiG,IAAA,CAAAxG,IAAA,GAAAqC,IAAAsF,IAAA,CAAA,CAAA,EAAA,MAAA,CAAA;;AAEApH,gBAAAiG,IAAA,CAAAgB,QAAA,GAAAnF,IAAAsF,IAAA,CAAA,CAAA,EAAA,WAAA,EAAAJ,MAAA,CAAA,CAAA,EAAA,EAAA,CAAA;;AAEAhH,gBAAAiG,IAAA,CAAAc,QAAA,GAAAjF,IAAAsF,IAAA,CAAA,CAAA,EAAA,WAAA,EAAAJ,MAAA,CAAA,CAAA,EAAA,EAAA,CAAA;;AAEA,cAAA,CAAAhH,MAAAsH,WAAA,EAAA;AACAtH,kBAAAsH,WAAA,GAAA,EAAA;AACA;;AAEAtH,gBAAAsH,WAAA,CAAAC,SAAA,GAAA,EAAA;AACAvH,gBAAAsH,WAAA,CAAAf,QAAA,GAAA,EAAA;AACAvG,gBAAAsH,WAAA,CAAAG,QAAA,GAAA,EAAA;AACAzH,gBAAAsH,WAAA,CAAApB,MAAA,GAAA,EAAA;AACAlG,gBAAAsH,WAAA,CAAAlB,WAAA,GAAA,EAAA;AACApG,gBAAAsH,WAAA,CAAAd,OAAA,GAAA,EAAA;AACAxG,gBAAAsH,WAAA,CAAAb,KAAA,GAAA,EAAA;AACAzG,gBAAAsH,WAAA,CAAA7D,QAAA,GAAA,EAAA;AACA;AAEA,OAtBA;AAuBA,KAjCA;AAmCA,GAvCA;;AA2CA,SAAA;AACAiD,cAAA,IADA;AAEA1G,WAAA;AACAiG,YAAA,GADA;AAEAY,6BAAA,GAFA;AAGAD,0BAAA;AAHA,KAFA;AAOA5H,iBAAA,kDAPA;AAQA2H,UAAAA;;AARA,GAAA;AAaA,CA1DA;;ACAArI,QAAAC,MAAA,CAAA,SAAA,EACAwH,SADA,CACA,iBADA,EACA,YAAA;AACA,MAAAhH,aAAA,SAAAA,UAAA,CAAAkC,MAAA,EAAAR,MAAA,EAAAS,WAAA,EAAAV,UAAA,EAAA;;AAEA;;AAEAqC,MAAA6E,QAAA,EAAAC,KAAA,CAAA,YAAA;AACA9E,QAAA,YAAA,EAAA+E,KAAA,CAAA,YAAA;AACA/E,UAAA,IAAA,EAAAgF,WAAA,CAAA,MAAA;AACA,OAFA;AAGA,KAJA;;AAQA;AACA5G,WAAA6G,SAAA,GAAA,YAAA;AACA7G,aAAA8G,SAAA,GAAA,CAAA9G,OAAA8G,SAAA;AACAvF,cAAAC,GAAA,CAAA,QAAA;AACA,KAHA;AAIAxB,WAAA+G,WAAA,GAAA,KAAA;AACA/G,WAAAgH,UAAA,GAAA,YAAA;AACA,UAAAC,eAAA,8EAAA;AACA,UAAA,CAAAjH,OAAA+G,WAAA,EAAA;AACAnF,UAAA,UAAA,EAAAsF,QAAA,CAAA,sBAAA,EAAAC,GAAA,CAAAF,YAAA,EAAA,YAAA;AACArF,YAAA,IAAA,EAAAwF,WAAA,CAAA,sBAAA;AACA,SAFA;AAGA,OAJA,MAKA;AACAxF,UAAA,UAAA,EAAAsF,QAAA,CAAA,qBAAA,EAAAC,GAAA,CAAAF,YAAA,EAAA,YAAA;AACArF,YAAA,IAAA,EAAAyF,IAAA,GAAAC,IAAA,CAAA,YAAA,EAAAF,WAAA,CAAA,MAAA;AACAxF,YAAA,IAAA,EAAAwF,WAAA,CAAA,qBAAA;AAEA,SAJA;AAKA;AACApH,aAAA+G,WAAA,GAAA,CAAA/G,OAAA+G,WAAA;AACA;AACA,KAhBA;;AAmBAxH,eAAAI,GAAA,CAAA,qBAAA,EAAA,UAAA4H,KAAA,EAAAC,OAAA,EAAAC,QAAA,EAAAC,SAAA,EAAAC,UAAA,EAAAC,OAAA,EAAA;AACA;AACA,cAAApI,OAAAqI,OAAA,CAAArJ,IAAA;AACA,aAAA,MAAA;AACAwB,iBAAA8H,QAAA,GAAA,EAAA;AACA;AACA,aAAA,YAAA;AACA9H,iBAAA8H,QAAA,GAAA,iBAAA;AACA;AACA,aAAA,gBAAA;AACA9H,iBAAA8H,QAAA,GAAA,iBAAA;AACA;AACA,aAAA,YAAA;AACA9H,iBAAA8H,QAAA,GAAA,sBAAA;AACA;AACA,aAAA,cAAA;AACA9H,iBAAA8H,QAAA,GAAA,eAAA;AACA;AACA,aAAA,kBAAA;AACA9H,iBAAA8H,QAAA,GAAA,mBAAA;AACA;AACA,aAAA,SAAA;AACA9H,iBAAA8H,QAAA,GAAA,OAAA;AACA;AACA,aAAA,OAAA;AACA9H,iBAAA8H,QAAA,GAAA,OAAA;AACA;AACA,aAAA,QAAA;AACA9H,iBAAA8H,QAAA,GAAA,QAAA;AACA;AACA;AACA9H,iBAAA8H,QAAA,GAAA,EAAA;AA7BA;AA+BA,KAjCA;AAoCA,GAzEA;;AA8EA,SAAA;AACArC,cAAA,IADA;AAEA3H,gBAAAA,UAFA;AAGAC,iBAAA;AAHA,GAAA;AAOA,CAvFA;;ACAAV,QAAAC,MAAA,CAAA,SAAA,EAAAwH,SAAA,CAAA,gBAAA,EAAA,YAAA;;AAEA,MAAAhH,aAAA,SAAAA,UAAA,CAAAkC,MAAA,EAAAP,OAAA,EAAAD,MAAA,EAAAE,KAAA,EAAA;AACAM,WAAA+H,YAAA,GAAA,UAAAC,QAAA,EAAA;AACA;AACAtI,YAAAqI,YAAA,CAAAC,QAAA,EACApH,IADA,CACA,UAAAqH,QAAA,EAAA;AACA1G,gBAAAC,GAAA,CAAAyG,SAAA9B,IAAA;AACA3G,eAAAO,EAAA,CAAA,YAAA;AACA,OAJA,EAKAmI,KALA,CAKA,UAAAD,QAAA,EAAA;AACA1G,gBAAAC,GAAA,CAAAyG,SAAA9B,IAAA;AACA,OAPA;AAQA,KAVA;;AAYAnG,WAAAmI,UAAA,GAAA,YAAA;AACAzI,YAAA0I,KAAA,CAAA,EAAAC,OAAArI,OAAAqI,KAAA,EAAAxD,UAAA7E,OAAA6E,QAAA,EAAA,EACAjE,IADA,CACA,UAAAqH,QAAA,EAAA;AACAzI,eAAAO,EAAA,CAAA,YAAA;AACA,OAHA,EAIAmI,KAJA,CAIA,UAAAD,QAAA,EAAA;AACA1G,gBAAAC,GAAA,CAAAyG,QAAA;AACAjI,eAAAsI,YAAA,GAAA,EAAA;AACAtI,eAAAuI,SAAA,CAAA,OAAA,EAAAC,YAAA,CAAA,QAAA,EAAA,KAAA;AACAxI,eAAAsI,YAAA,CAAA,OAAA,IAAAL,SAAA9B,IAAA,CAAAsC,OAAA;AACA,OATA;AAUA,KAXA;AAYA,GAzBA;;AA6BA,SAAA;AACAhD,cAAA,IADA;AAEA3H,gBAAAA,UAFA;AAGAC,iBAAA;;AAHA,GAAA;AAQA,CAvCA;;ACAAV,QAAAC,MAAA,CAAA,SAAA,EAAAwH,SAAA,CAAA,iBAAA,EAAA,YAAA;;AAEA,MAAAhH,aAAA,SAAAA,UAAA,CAAAkC,MAAA,EAAAN,KAAA,EAAAD,OAAA,EAAAD,MAAA,EAAA;AACAQ,WAAA0I,MAAA,GAAA,YAAA;AACAhJ,YAAAgJ,MAAA;AACAlJ,aAAAO,EAAA,CAAA,MAAA;AACA,KAHA;AAIA,GALA;;AASA,SAAA;AACA0F,cAAA,IADA;AAEA3H,gBAAAA,UAFA;AAGA6K,cAAA;;AAHA,GAAA;AAQA,CAnBA;;ACAAtL,QAAAC,MAAA,CAAA,SAAA,EAAAwH,SAAA,CAAA,cAAA,EAAA,YAAA;;AAEA,MAAAhH,aAAA,SAAAA,UAAA,CAAAkC,MAAA,EAAA,CAEA,CAFA;;AAMA,SAAA;AACAyF,cAAA,IADA;AAEA3H,gBAAAA,UAFA;AAGAC,iBAAA;;AAHA,GAAA;AAQA,CAhBA;;ACAAV,QAAAC,MAAA,CAAA,SAAA,EAAAwH,SAAA,CAAA,kBAAA,EAAA,UAAAzC,YAAA,EAAA;;AAEA,MAAAvE,aAAA,SAAAA,UAAA,CAAAkC,MAAA,EAAAC,WAAA,EAAAR,OAAA,EAAA;AACA,QAAA,CAAA4C,aAAAnE,UAAA,EAAA;AACA8B,aAAA9B,UAAA,GAAAuB,QAAAc,YAAA,CAAArC,UAAA;AACA,KAFA,MAEA;AACA8B,aAAA9B,UAAA,GAAAmE,aAAAnE,UAAA;AACA;AACA+B,gBAAA2I,mBAAA,CAAA5I,OAAA9B,UAAA,EAAA0C,IAAA,CAAA,UAAAC,GAAA,EAAA;AACAb,aAAA6I,gBAAA,GAAA;AACAC,gBAAAjI,IAAA,CAAA,EAAA,cAAA,CADA;AAEAkI,gBAAAlI,IAAA,CAAA,EAAA,eAAA,CAFA;AAGAmI,gBAAAnI,IAAA,CAAA,EAAA,iBAAA;AAHA,OAAA;AAMA,KAPA;;AAWAU,YAAAC,GAAA,CAAAxB,OAAA9B,UAAA;AACA8B,WAAAiJ,MAAA,GAAA,YAAA;AACAjJ,aAAAkJ,iBAAA,GAAA;AACAC,cAAAnJ,OAAA6I,gBAAA,CAAAC,MADA;AAEAT,eAAArI,OAAA6I,gBAAA,CAAAE,MAFA;AAGAK,iBAAApJ,OAAA6I,gBAAA,CAAAG;AAHA,OAAA;AAKA/I,kBAAAoJ,sBAAA,CAAArJ,OAAA9B,UAAA,EAAA8B,OAAAkJ,iBAAA,EAAAtI,IAAA,CAAA,UAAAC,GAAA,EAAA,CAEA,CAFA;AAGA,KATA;AAUA,GA5BA;;AAgCA,SAAA;AACA4E,cAAA,IADA;AAEA3H,gBAAAA,UAFA;AAGAC,iBAAA;;AAHA,GAAA;AAQA,CA1CA;;ACAAV,QAAAC,MAAA,CAAA,SAAA,EACAwH,SADA,CACA,aADA,EACA,YAAA;AACA,SAAA;AACAW,cAAA,GADA;AAEA6D,aAAA,SAFA;AAGA5D,UAAA,cAAA3G,KAAA,EAAAgG,OAAA,EAAAwE,KAAA,EAAAC,IAAA,EAAA;AACAzE,cAAA0E,EAAA,CAAA,SAAA,EAAA,YAAA;AACAD,aAAAhB,YAAA,CAAA,QAAA,EAAA,IAAA;AACA,OAFA;AAGA;AAPA,GAAA;AASA,CAXA;;ACAAnL,QAAAC,MAAA,CAAA,SAAA,EAAAwH,SAAA,CAAA,iBAAA,EAAA,YAAA;;AAEA,MAAAhH,aAAA,SAAAA,UAAA,CAAAkC,MAAA,EAAAN,KAAA,EAAAF,MAAA,EAAA;AACAQ,WAAA+D,gBAAA,GAAA,UAAAnE,CAAA,EAAA;;AAEA,UAAAI,OAAA0J,KAAA,CAAA1H,MAAA,KAAA,CAAA,EAAA;AACAhC,eAAA0J,KAAA,GAAA,MAAA1J,OAAA0J,KAAA;AACA;AACA,UAAA,CAAAzF,OAAAC,SAAA,CAAAD,OAAArE,EAAAuE,GAAA,CAAA,CAAA,EAAA;AACAnE,eAAA0J,KAAA,GAAA1J,OAAA0J,KAAA,CAAAtF,KAAA,CAAA,EAAA,EAAAC,MAAA,CAAA,CAAA,EAAArE,OAAA0J,KAAA,CAAA1H,MAAA,GAAA,CAAA,EAAAsC,IAAA,CAAA,EAAA,CAAA;AACA;AACA,UAAAtE,OAAA0J,KAAA,CAAA1H,MAAA,KAAA,CAAA,EAAA;AACAhC,eAAA0J,KAAA,GAAA1J,OAAA0J,KAAA,GAAA,GAAA;AACA;AACA,UAAA1J,OAAA0J,KAAA,CAAA1H,MAAA,KAAA,CAAA,EAAA;AACAhC,eAAA0J,KAAA,GAAA1J,OAAA0J,KAAA,GAAA,GAAA;AACA;AACA,UAAA1J,OAAA0J,KAAA,CAAA1H,MAAA,KAAA,EAAA,EAAA;AACAhC,eAAA0J,KAAA,GAAA1J,OAAA0J,KAAA,CAAAtF,KAAA,CAAA,EAAA,EAAAC,MAAA,CAAA,CAAA,EAAArE,OAAA0J,KAAA,CAAA1H,MAAA,GAAA,CAAA,EAAAsC,IAAA,CAAA,EAAA,CAAA;AACA;AACA,KAjBA;;AAmBAtE,WAAA2J,MAAA,GAAA,YAAA;AACA,UAAArG,OAAA;AACAsG,mBAAA5J,OAAA4J,SADA;AAEAC,kBAAA7J,OAAA6J,QAFA;AAGAxB,eAAArI,OAAAqI,KAHA;AAIAxD,kBAAA7E,OAAA6E,QAJA;AAKA6E,eAAA1J,OAAA0J;AALA,OAAA;;AAQAnI,cAAAC,GAAA,CAAA8B,IAAA;AACA5D,YAAAoK,MAAA,CAAAxG,IAAA,EACA1C,IADA,CACA,UAAAqH,QAAA,EAAA;AACA;AACAvI,cAAA0I,KAAA,CAAA,EAAAC,OAAArI,OAAAqI,KAAA,EAAAxD,UAAA7E,OAAA6E,QAAA,EAAA,EACAjE,IADA,CACA,UAAAqH,QAAA,EAAA;AACAzI,iBAAAO,EAAA,CAAA,YAAA;AACA,SAHA;AAIA,OAPA,EAQAmI,KARA,CAQA,UAAAD,QAAA,EAAA;AACA;AACAjI,eAAAsI,YAAA,GAAA,EAAA;AACAtI,eAAAuI,SAAA,CAAA,OAAA,EAAAC,YAAA,CAAA,QAAA,EAAA,KAAA;AACAxI,eAAAsI,YAAA,CAAA,OAAA,IAAAL,SAAA9B,IAAA,CAAAsC,OAAA;AACA,OAbA;AAeA,KAzBA;AA0BAzI,WAAA+J,UAAA,GAAA,YAAA;AACA/J,aAAAgK,eAAA,GAAA,CAAAhK,OAAAgK,eAAA;AACAzI,cAAAC,GAAA,CAAA,QAAA;AACA,KAHA;AAIA,GAlDA;;AAsDA,SAAA;AACAiE,cAAA,IADA;AAEA3H,gBAAAA,UAFA;AAGAC,iBAAA;;AAHA,GAAA;AAQA,CAhEA;;ACAAV,QAAAC,MAAA,CAAA,SAAA,EAAAwH,SAAA,CAAA,eAAA,EAAA,YAAA;;AAEA,MAAAhH,aAAA,SAAAA,UAAA,CAAAkC,MAAA,EAAA,CAEA,CAFA;;AAMA,SAAA;AACAyF,cAAA,IADA;AAEA3H,gBAAAA,UAFA;AAGAC,iBAAA;;AAHA,GAAA;AAQA,CAhBA;;ACAAV,QAAAC,MAAA,CAAA,SAAA,EACA2M,OADA,CACA,aADA,EACA,UAAAC,KAAA,EAAA;;AAEA;AACA,OAAAlH,aAAA,GAAA,UAAA1C,KAAA,EAAA;AACA,WAAA4J,MAAA;AACAC,cAAA,KADA;AAEAtM,WAAA,iBAAAyC;AAFA,KAAA,EAGAM,IAHA,CAGA,UAAAC,GAAA,EAAA;AACA,aAAAA,IAAAsF,IAAA;AACA,KALA,CAAA;AAMA,GAPA;AAQA,OAAAxF,cAAA,GAAA,UAAAN,QAAA,EAAA;AACA,WAAA6J,MAAA;AACAC,cAAA,MADA;AAEAtM,WAAA,aAFA;AAGAsI,YAAA9F;AAHA,KAAA,EAIAO,IAJA,CAIA,UAAAC,GAAA,EAAA;AACA,aAAAA,IAAAsF,IAAA;AACA,KANA,CAAA;AAOA,GARA;;AAUA,OAAArF,eAAA,GAAA,UAAA5C,UAAA,EAAA;AACA,WAAAgM,MAAA;AACAC,cAAA,KADA;AAEAtM,WAAA,mBAAAK;AAFA,KAAA,EAGA0C,IAHA,CAGA,UAAAC,GAAA,EAAA;AACA,aAAAA,IAAAsF,IAAA;AACA,KALA,CAAA;AAMA,GAPA;;AASA,OAAA9E,WAAA,GAAA,UAAAN,KAAA,EAAA;AACA,WAAAmJ,MAAA;AACAC,cAAA,MADA;AAEAtM,WAAA,mBAFA;AAGAsI,YAAApF;AAHA,KAAA,EAIAH,IAJA,CAIA,UAAAC,GAAA,EAAA;AACA,aAAAA,GAAA;AACA,KANA,CAAA;AAOA,GARA;;AAUA,OAAAwI,sBAAA,GAAA,UAAAnL,UAAA,EAAAgL,iBAAA,EAAA;AACA,WAAAgB,MAAA;AACAC,cAAA,KADA;AAEAtM,WAAA,uBAAAK,UAFA;AAGAiI,YAAA+C;AAHA,KAAA,EAIAtI,IAJA,CAIA,UAAAC,GAAA,EAAA;AACA,aAAAA,GAAA;AACA,KANA,CAAA;AAOA,GARA;;AAUA,OAAA+H,mBAAA,GAAA,UAAA1K,UAAA,EAAA;AACA,WAAAgM,MAAA;AACAC,cAAA,KADA;AAEAtM,WAAA,uBAAAK;AAFA,KAAA,EAGA0C,IAHA,CAGA,UAAAC,GAAA,EAAA;AACA,aAAAA,IAAAsF,IAAA;AACA,KALA,CAAA;AAMA,GAPA;;AASA,OAAA7D,gBAAA,GAAA,UAAApE,UAAA,EAAA;AACA,WAAAgM,MAAA;AACAC,cAAA,KADA;AAEAtM,WAAA,uBAAAK;AAFA,KAAA,EAGA0C,IAHA,CAGA,UAAAC,GAAA,EAAA;AACA,aAAAA,IAAAsF,IAAA;AACA,KALA,CAAA;AAMA,GAPA;;AASA,OAAAf,gBAAA,GAAA,UAAAJ,IAAA,EAAA;AACA,WAAAkF,MAAA;AACAC,cAAA,MADA;AAEAtM,WAAA,mBAFA;AAGAsI,YAAAnB;AAHA,KAAA,EAIApE,IAJA,CAIA,UAAAC,GAAA,EAAA;AACA,aAAAA,GAAA;AACA,KANA,CAAA;AAOA,GARA;AASA,OAAA4B,IAAA,GAAA,UAAAC,qBAAA,EAAAC,OAAA,EAAA;AACA,WAAAuH,MAAA;AACAC,cAAA,KADA;AAEAtM,WAAA,uBAAA6E,qBAFA;AAGAyD,YAAA,EAAAxD,SAAAA,OAAA;AAHA,KAAA,EAIA/B,IAJA,CAIA,UAAAC,GAAA,EAAA;AACA,aAAAA,GAAA;AACA,KANA,CAAA;AAOA,GARA;AASA,OAAA+B,MAAA,GAAA,UAAAD,OAAA,EAAA;AACA,WAAAuH,MAAA;AACAC,cAAA,KADA;AAEAtM,WAAA,aAAA8E;AACA;AAHA,KAAA,EAIA/B,IAJA,CAIA,UAAAC,GAAA,EAAA;AACA,aAAAA,GAAA;AACA,KANA,CAAA;AAOA,GARA;AASA,OAAAqC,cAAA,GAAA,UAAAhF,UAAA,EAAA;AACA,WAAAgM,MAAA;AACAC,cAAA,QADA;AAEAtM,WAAA,eAAAK;AAFA,KAAA,EAGA0C,IAHA,CAGA,UAAAC,GAAA,EAAA;AACA,aAAAA,GAAA;AACA,KALA,CAAA;AAMA,GAPA;AAQA,OAAAwC,WAAA,GAAA,UAAA/C,KAAA,EAAA;AACA,WAAA4J,MAAA;AACAC,cAAA,KADA;AAEAtM,WAAA,YAAAyC;AAFA,KAAA,EAGAM,IAHA,CAGA,UAAAC,GAAA,EAAA;AACA,aAAAA,IAAAsF,IAAA;AACA,KALA,CAAA;AAMA,GAPA;AAQA,OAAA5C,eAAA,GAAA,UAAAH,EAAA,EAAAI,YAAA,EAAA;AACA,WAAA0G,MAAA;AACAC,cAAA,KADA;AAEAtM,WAAA,sBAAAuF,EAFA;AAGA+C,YAAA,EAAA3C,cAAAA,YAAA;AAHA,KAAA,EAIA5C,IAJA,CAIA,UAAAC,GAAA,EAAA;AACA,aAAAA,GAAA;AACA,KANA,CAAA;AAOA,GARA;AASA,OAAA0F,QAAA,GAAA,UAAA7D,qBAAA,EAAAsC,IAAA,EAAA;AACA,WAAAkF,MAAA;AACAC,cAAA,KADA;AAEAtM,WAAA,mBAAA6E,qBAFA;AAGAyD,YAAAnB;AAHA,KAAA,EAIApE,IAJA,CAIA,UAAAC,GAAA,EAAA;AACA,aAAAA,GAAA;AACA,KANA,CAAA;AAOA,GARA;AASA,OAAA8C,cAAA,GAAA,UAAAP,EAAA,EAAAQ,WAAA,EAAA;AACA,WAAAsG,MAAA;AACAC,cAAA,KADA;AAEAtM,WAAA,qBAAAuF,EAFA;AAGA+C,YAAA,EAAAvC,aAAAA,WAAA;AAHA,KAAA,EAIAhD,IAJA,CAIA,UAAAC,GAAA,EAAA;AACA,aAAAA,GAAA;AACA,KANA,CAAA;AAOA,GARA;AASA,OAAA0D,WAAA,GAAA,UAAAnB,EAAA,EAAAY,QAAA,EAAA;AACA,WAAAkG,MAAA;AACAC,cAAA,KADA;AAEAtM,WAAA,kBAAAuF,EAFA;AAGA+C,YAAA,EAAAnC,UAAAA,QAAA;AAHA,KAAA,EAIApD,IAJA,CAIA,UAAAC,GAAA,EAAA;AACA,aAAAA,GAAA;AACA,KANA,CAAA;AAOA,GARA;AASA,OAAA8D,cAAA,GAAA,UAAAvB,EAAA,EAAAwB,WAAA,EAAA;AACA,WAAAsF,MAAA;AACAC,cAAA,KADA;AAEAtM,WAAA,qBAAAuF,EAFA;AAGA+C,YAAA,EAAAvB,aAAAA,WAAA;AAHA,KAAA,EAIAhE,IAJA,CAIA,UAAAC,GAAA,EAAA;AACA,aAAAA,GAAA;AACA,KANA,CAAA;AAOA,GARA;AASA,OAAAoF,UAAA,GAAA,UAAAvD,qBAAA,EAAA;AACA,WAAAwH,MAAA;AACAC,cAAA,QADA;AAEAtM,WAAA,sBAAA6E;AAFA,KAAA,EAGA9B,IAHA,CAGA,UAAAC,GAAA,EAAA;AACA,aAAAA,GAAA;AACA,KALA,CAAA;AAMA,GAPA;AAUA,CAvKA","file":"all.js","sourcesContent":["\r\nangular.module('mgmtApp', ['ui.router', 'satellizer', 'ngAnimate', 'ngTouch'])\r\n.config(function($stateProvider, $urlRouterProvider, $authProvider) {\r\n  $urlRouterProvider.otherwise('/');\r\n  $stateProvider\r\n\r\n  .state('home', {\r\n    url: \"/\" ,\r\n    controller:  'homeCtrl',\r\n    templateUrl: '../src/view/home.html',\r\n    restricted: false\r\n  })\r\n  .state('properties', {\r\n    url: \"/properties\" ,\r\n    controller:  'propertiesCtrl',\r\n    templateUrl: '../src/view/properties.html',\r\n    restricted: true\r\n  })\r\n  .state('createProperty', {\r\n    url: \"/createProperty\",\r\n    controller: 'createPropertyCtrl',\r\n    templateUrl: '../src/view/createProperty.html',\r\n    restricted: true\r\n  })\r\n  .state('mainAlerts', {\r\n    url: \"/mainAlerts/\",\r\n    controller: 'mainAlertsCtrl',\r\n    templateUrl: '../src/view/mainAlerts.html',\r\n    restricted: true,\r\n    params: {propertyId: null}\r\n  })\r\n  .state('userSettings', {\r\n    url: \"/userSettings\",\r\n    controller: 'userSettingsCtrl',\r\n    templateUrl: '../src/view/userSettings.html',\r\n    restricted: true\r\n  })\r\n  .state('propertySettings', {\r\n    url: \"/propertySettings\",\r\n    templateUrl: '../src/view/propertySettings.html',\r\n    restricted: true,\r\n    params: {propertyId: null}\r\n  })\r\n  .state('contact', {\r\n    url: \"/contact\",\r\n    controller: 'contactCtrl',\r\n    templateUrl: '../src/view/contact.html',\r\n    restricted: false\r\n  })\r\n  .state('login', {\r\n    url: \"/login\",\r\n    templateUrl: '../src/view/login.html',\r\n    restricted: false\r\n  })\r\n  .state('signup', {\r\n    url: \"/signup\",\r\n    templateUrl: '../src/view/signup.html',\r\n    restricted: false\r\n  })\r\n  $authProvider.loginUrl = '/auth/login';\r\n  $authProvider.signUpUrl = '/auth/signup';\r\n  $authProvider.facebook({\r\n    clientId: '1730897763901303',\r\n    responseType: 'code',\r\n    name: 'facebook',\r\n    url: '/auth/facebook',\r\n    authorizationEndpoint: 'https://www.facebook.com/v2.5/dialog/oauth',\r\n    redirectUri: window.location.origin + '/properties',\r\n    requiredUrlParams: ['scope'],\r\n    scope: ['email'],\r\n    scopeDelimiter: ',',\r\n    display: 'popup',\r\n    oauthType: '2.0',\r\n    popupOptions: { width: 580, height: 400 }\r\n  });\r\n  })\r\n   .run(function($rootScope, $state, $window, $auth){\r\n     $rootScope.$on('$stateChangeStart', function(e, to) {\r\n      //  console.log('$auth.isAuthenticated',$auth.isAuthenticated());\r\n      //  console.log('$window.localStorage',$window.localStorage);\r\n       if (!to.restricted) return;\r\n\r\n       if ($auth.isAuthenticated()) return;\r\n       else $state.go('home');\r\n\r\n\r\n     });\r\n})\r\n","angular.module('mgmtApp')\r\n.controller('contactCtrl', function($scope, mainService){\r\n\r\n\r\n})\r\n","angular.module('mgmtApp')\r\n.controller('createPropertyCtrl', function($scope, mainService, $window, $state){\r\n\r\n  $scope.propertyFromVisibility = true;\r\n  $scope.taskSelectionVisibility = false;\r\n  $scope.customTaskVisibility = false;\r\n\r\n  $scope.property = {\r\n    token: $window.localStorage.satellizer_token,\r\n    typeId: 1\r\n  };\r\n\r\n  $scope.send = function(property){\r\n    mainService.createProperty(property).then(function(res){\r\n      $scope.propertyId = res[0][\"id\"]\r\n      $scope.propertyFromVisibility = false;\r\n      $scope.taskSelectionVisibility = true;\r\n\r\n      mainService.getDefaultTasks($scope.propertyId).then(function(res){\r\n        $scope.tasks = res;\r\n      })\r\n    });\r\n  }\r\n\r\n  $scope.createTasks = function(tasks) {\r\n    var selectedTask = tasks.filter(function(currentValue){\r\n      currentValue.propertyId = $scope.propertyId;\r\n      return currentValue.selected !== false;\r\n    })\r\n    mainService.insertTasks(selectedTask).then(function(res){\r\n      if (res.status === 201) {\r\n        console.log($scope.propertyId)\r\n        $state.go('mainAlerts', {propertyId: $scope.propertyId})\r\n      }\r\n      else {\r\n        alert('server error try resubmit')\r\n      }\r\n\r\n    })\r\n  }\r\n})\r\n","angular.module('mgmtApp')\r\n.controller('homeCtrl', function($scope, mainService){\r\n\r\n  var cnt=0, texts=[];\r\n\r\n  // save the texts in an array for re-use\r\n  $(\".textContent\").each(function() {\r\n    texts[cnt++]=$(this).html();\r\n  });\r\n  function slide() {\r\n    if (cnt>=texts.length) cnt=0;\r\n    $('#textMessage').html(texts[cnt++]);\r\n    $('#textMessage')\r\n      .fadeIn('slow').animate({opacity: 1.0}, 5000).fadeOut('slow',\r\n       function() {\r\n         return slide()\r\n       }\r\n    );\r\n  }\r\n  slide()\r\n\r\n})\r\n","angular.module('mgmtApp')\r\n.controller('mainAlertsCtrl', function($scope, mainService, $stateParams, $window){\r\n  if ($stateParams.propertyId) {\r\n    $window.localStorage.propertyId = $stateParams.propertyId;\r\n    $scope.propertyId = $stateParams.propertyId;\r\n  }\r\n  else if (!$stateParams.propertyId) {\r\n   $scope.propertyId = $window.localStorage.propertyId\r\n }\r\n\r\n  $scope.getPropertyTasks = function(propertyId){\r\n    mainService.getPropertyTasks(propertyId)\r\n    .then(function(res){\r\n      $scope.propertyTasks = res.filter(function(currentValue){\r\n        return currentValue.inactive === false;\r\n      });\r\n    })\r\n  }\r\n\r\n  $scope.getPropertyTasks($scope.propertyId)\r\n\r\n  $scope.done = function(propertymaintenanceid, alertid){\r\n    mainService.done(propertymaintenanceid, alertid)\r\n    .then(function(res){\r\n      $scope.getPropertyTasks($scope.propertyId)\r\n    })\r\n  }\r\n  $scope.snooze = function(alertid) {\r\n    mainService.snooze(alertid)\r\n    .then(function(res) {\r\n      $scope.getPropertyTasks($scope.propertyId)\r\n    })\r\n  }\r\n\r\n\r\n})\r\n","angular.module('mgmtApp')\r\n.controller('propertiesCtrl', function($scope, $window, mainService, $swipe){\r\n\r\n  $scope.propDeleteButtonVisibility = false;\r\n  $scope.propDeleteConfirmVisiblity = false;\r\n\r\n  $scope.getProperties = function(token){\r\n    mainService.getProperties(token)\r\n    .then(function(res){\r\n      $scope.properties = res;\r\n    })\r\n  }\r\n  $scope.getProperties($window.localStorage.satellizer_token)\r\n\r\n  $scope.deleteProperty = function(propertyId){\r\n    mainService.deleteProperty(propertyId).then(function(res){\r\n      $scope.properties = $scope.properties.filter(function(currentProp){\r\n        return currentProp.id !== propertyId\r\n      });\r\n    })\r\n  }\r\n\r\n})\r\n","angular.module('mgmtApp')\r\n.controller('userSettingsCtrl', function($scope, mainService, $window){\r\n\r\n  $scope.getUserById = function(token){\r\n    mainService.getUserById(token)\r\n    .then(function(res){\r\n      $scope.user = res[0];\r\n    })\r\n  }\r\n  $scope.getUserById($window.localStorage.satellizer_token)\r\n\r\n  $scope.updateFirstName = function(newFirstName){\r\n    mainService.updateFirstName($scope.user.id, newFirstName)\r\n    .then(function (res){\r\n     $scope.user.firstname = newFirstName;\r\n     $scope.firstNameEdit = false;\r\n     $scope.newFirstName = \"\";\r\n    })\r\n  }\r\n  $scope.updateLastName = function(newLastName){\r\n    mainService.updateLastName($scope.user.id, newLastName)\r\n    .then(function (res){\r\n     $scope.user.last_name = newLastName;\r\n     $scope.lastNameEdit = false;\r\n     $scope.newLastName = \"\";\r\n    })\r\n  }\r\n/////////////////////edit phone number to (xXx)xXX-XXXX/////////////\r\n  $scope.phoneNumberStyle = function(e){\r\n\r\n     if ($scope.newPhone.length === 1) {\r\n       $scope.newPhone = '(' + $scope.newPhone\r\n     }\r\n     if (!Number.isInteger(Number(e.key))) {\r\n       $scope.newPhone = $scope.newPhone.split('').splice(0,$scope.newPhone.length - 1).join('')\r\n     }\r\n     if ($scope.newPhone.length === 4) {\r\n       $scope.newPhone = $scope.newPhone + ')'\r\n     }\r\n     if ($scope.newPhone.length === 8) {\r\n       $scope.newPhone = $scope.newPhone + '-'\r\n     }\r\n     if ($scope.newPhone.length === 14) {\r\n       $scope.newPhone = $scope.newPhone.split('').splice(0,$scope.newPhone.length - 1).join('')\r\n     }\r\n   }\r\n\r\n  $scope.updatePhone = function(newPhone){\r\n      newPhone = newPhone.replace(/\\D/g,'');\r\n    mainService.updatePhone($scope.user.id, newPhone)\r\n    .then(function (res){\r\n     $scope.user.phone_number = newPhone;\r\n     $scope.phoneEdit = false;\r\n     $scope.newPhone = \"\";\r\n    })\r\n  }\r\n\r\n  $scope.updatePassword = function(newPassword){\r\n    mainService.updatePassword($scope.user.id, newPassword)\r\n    .then(function (res){\r\n     $scope.user.password = newPassword;\r\n     $scope.newPassword = \"\";\r\n    })\r\n  }\r\n\r\n\r\n})\r\n","angular.module('mgmtApp').directive('createTask', function(mainService,$window){\r\n\r\nvar controller = function(scope, element){\r\n  scope.task = {\r\n    season: 'Monthly'\r\n  }\r\n\r\n  scope.createTask = function(propertyId,task) {\r\n    if(!propertyId){\r\n      task.propertyId = $window.localStorage.propertyId;\r\n    }\r\n    else {\r\n      task.propertyId = propertyId\r\n    }\r\n\r\n    switch (task.season) {\r\n      case 'Monthly':\r\n          task.dayInterval = 30;\r\n          break;\r\n      case 'Quarterly':\r\n          task.dayInterval = 90;\r\n          break;\r\n      case 'Biannually':\r\n          task.dayInterval = 182;\r\n          break;\r\n      case 'Annually':\r\n          task.dayInterval = 365;\r\n          break;\r\n      default:\r\n          task.dayInterval = task.dayInterval\r\n      }\r\n\r\n    mainService.createCustomTask(task).then(function(res){\r\n\r\n      element.after('<div class=\"custom-task\"><span>'+scope.task.name+'</span><span>'+scope.task.lastDate+'</span><span>'+scope.task.season+'</span><span>'+scope.task.dayInterval+'</span><span>'+scope.task.outdoor+'</span><span>'+scope.task.notes+'</span></div>')\r\n\r\n      scope.task = {\r\n        name: null,\r\n        season: null,\r\n        lastDate: null,\r\n        dayInterval: null,\r\n        outdoor: false,\r\n        notes: null\r\n      }\r\n    })\r\n\r\n  }\r\n}\r\n\r\n\r\n\r\nreturn{\r\n  restrict: 'AE',\r\n  scope: {\r\n    propertyId: '='\r\n  },\r\n  templateUrl: '../src/view/template/createTask_template.html',\r\n  link: controller\r\n\r\n}\r\n\r\n\r\n})\r\n","angular.module('mgmtApp').directive('editTasks', function($stateParams){\r\n\r\nvar controller = function($scope, mainService, $window){\r\n  if (!$stateParams.propertyId) {\r\n   $scope.propertyId = $window.localStorage.propertyId\r\n }\r\n else {\r\n   $scope.propertyId = $stateParams.propertyId\r\n }\r\n\r\n $scope.editFormVisibility = false;\r\n $scope.taskOverlayVisibility = false;\r\n\r\n mainService.getPropertyTasks($scope.propertyId).then(function(res){\r\n   res.map(function(currentValue){\r\n     currentValue.nextdate = currentValue.nextdate.substr(0,10);\r\n     currentValue.lastdate = currentValue.lastdate.substr(0,10);\r\n   })\r\n   $scope.tasks = res;\r\n })\r\n\r\n  $scope.deleteTask = function(propertymaintenanceid){\r\n    mainService.deleteTask(propertymaintenanceid).then(function(res){\r\n      $scope.tasks = $scope.tasks.filter(function(currentValue){\r\n        return currentValue.propertymaintenanceid !== propertymaintenanceid;\r\n      })\r\n    })\r\n  }\r\n\r\n  $scope.createTask = function(propertyId,task) {\r\n    if(!propertyId){\r\n      task.propertyId = $window.localStorage.propertyId;\r\n    }\r\n    else {\r\n      task.propertyId = propertyId\r\n    }\r\n\r\n    switch (task.season) {\r\n      case 'Monthly':\r\n          task.dayInterval = 30;\r\n          break;\r\n      case 'Quarterly':\r\n          task.dayInterval = 90;\r\n          break;\r\n      case 'Biannually':\r\n          task.dayInterval = 182;\r\n          break;\r\n      case 'Annually':\r\n          task.dayInterval = 365;\r\n          break;\r\n      default:\r\n          task.dayInterval = task.dayInterval\r\n      }\r\n\r\n    mainService.createCustomTask(task).then(function(res){\r\n      var newTask = res.data[0]\r\n      newTask[\"dayinterval\"] = newTask[\"day_interval\"];\r\n      newTask[\"nextdate\"] = newTask[\"next_date\"].substr(0,10);\r\n      newTask[\"lastdate\"] = newTask[\"last_date\"].substr(0,10);\r\n      delete newTask[\"next_date\"];\r\n      delete newTask[\"last_date\"];\r\n\r\n      $scope.tasks.push(newTask)\r\n\r\n      $scope.newTask = {\r\n        name: null,\r\n        season: null,\r\n        lastDate: null,\r\n        dayInterval: null,\r\n        outdoor: false,\r\n        notes: null\r\n      }\r\n    })\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\nreturn{\r\n  restrict: 'AE',\r\n  controller: controller,\r\n  templateUrl: '../src/view/template/editTasks_template.html'\r\n\r\n}\r\n\r\n\r\n})\r\n","angular.module('mgmtApp').directive('editTasksForm', function(mainService){\r\n\r\nvar link = function(scope){\r\n  scope.editTaskObj = {};\r\n  scope.editTaskObj.maintName = scope.task.name;\r\n\r\n  scope.editTask = function(task){\r\n    if (!task) {\r\n      task = {};\r\n    }\r\n    // task[\"maintName\"] = scope.task.name;\r\n    task[\"inactive\"] = scope.task.inactive;\r\n    task[\"outdoor\"] = scope.task.outdoor;\r\n    task[\"season\"] = scope.task.season;\r\n    task[\"dayInterval\"] = scope.task.dayInterval;\r\n    task[\"notes\"] = scope.task.notes;\r\n    mainService.editTask(scope.task.propertymaintenanceid, task).then(function(res){\r\n      if (res) {\r\n        scope.task.name = res.data[0][\"name\"]\r\n\r\n        scope.task.lastdate = res.data[0][\"last_date\"].substr(0,10)\r\n\r\n        scope.task.nextdate = res.data[0][\"next_date\"].substr(0,10)\r\n\r\n        if(!scope.editTaskObj) {\r\n          scope.editTaskObj = {};\r\n        }\r\n\r\n        scope.editTaskObj.maintName = '';\r\n        scope.editTaskObj.lastDate = '';\r\n        scope.editTaskObj.nextDate = '';\r\n        scope.editTaskObj.season = '';\r\n        scope.editTaskObj.dayInterval = '';\r\n        scope.editTaskObj.outdoor = '';\r\n        scope.editTaskObj.notes = '';\r\n        scope.editTaskObj.inactive = '';\r\n      }\r\n\r\n    })\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\nreturn{\r\n  restrict: 'AE',\r\n  scope: {\r\n    task: '=',\r\n    taskOverlayVisibility: '=',\r\n    editFormVisibility: '='\r\n  },\r\n  templateUrl: '../src/view/template/editTasksForm_template.html',\r\n  link: link\r\n\r\n}\r\n\r\n\r\n})\r\n","angular.module('mgmtApp')\r\n.directive('headerDirective', function() {\r\n  var controller = function($scope, $state, mainService, $rootScope) {\r\n\r\n    // menu icon animation\r\n\r\n    $(document).ready(function(){\r\n\t$('#nav-icon3').click(function(){\r\n\t\t$(this).toggleClass('open');\r\n\t});\r\n});\r\n\r\n\r\n\r\n    // menu dropdown animationm\r\n    $scope.showLogin = function () {\r\n        $scope.modalFunc = !$scope.modalFunc;\r\n        console.log('firing')\r\n      }\r\n      $scope.menuShowing = false;\r\n      $scope.toggleMenu = function() {\r\n        var animationEnd = 'webkitAnimationEnd mozAnimationEnd MSAnimationEnd oanimationend animationend';\r\n        if (!$scope.menuShowing) {\r\n            $('div.menu').addClass('animated slideInDown').one(animationEnd, function () {\r\n              $(this).removeClass('animated slideInDown')\r\n            });\r\n        }\r\n        else {\r\n              $('div.menu').addClass('animated slideOutUp').one(animationEnd, function () {\r\n                $(this).prev().find('#nav-icon3').removeClass('open')\r\n                $(this).removeClass('animated slideOutUp')\r\n\r\n            })\r\n        }\r\n        $scope.menuShowing = !$scope.menuShowing;\r\n        // console.log($scope.menuShowing);\r\n      }\r\n\r\n\r\n      $rootScope.$on('$stateChangeSuccess', function(event, toState, toParams, fromState, fromParams, options){\r\n        //  console.log($state.current.name);\r\n          switch($state.current.name) {\r\n              case 'home':\r\n                  $scope.viewname = '';\r\n                  break;\r\n              case 'properties':\r\n                  $scope.viewname = 'Your Properties';\r\n                  break;\r\n              case 'createProperty':\r\n                  $scope.viewname = 'Property Create';\r\n                  break;\r\n              case 'mainAlerts':\r\n                  $scope.viewname = 'Upcoming Maintenance';\r\n                  break;\r\n              case 'userSettings':\r\n                  $scope.viewname = 'User Settings';\r\n                  break;\r\n              case 'propertySettings':\r\n                  $scope.viewname = 'Property Settings';\r\n                  break;\r\n              case 'contact':\r\n                  $scope.viewname = 'About';\r\n                  break;\r\n              case 'login':\r\n                  $scope.viewname = 'Login';\r\n                  break;\r\n              case 'signup':\r\n                  $scope.viewname = 'Signup';\r\n                  break;\r\n              default:\r\n                  $scope.viewname = ''\r\n          }\r\n       })\r\n\r\n\r\n     };\r\n\r\n\r\n\r\n\r\n  return {\r\n    restrict: 'AE',\r\n    controller: controller,\r\n    templateUrl: '../src/view/template/header.html'\r\n  }\r\n\r\n\r\n})\r\n","angular.module('mgmtApp').directive('loginDirective', function(){\r\n\r\nvar controller = function($scope, $window, $state, $auth){\r\n  $scope.authenticate = function(provider) {\r\n    // localStorage.clear();\r\n    $auth.authenticate(provider)\r\n    .then(function(response){\r\n      console.log(response.data);\r\n      $state.go('properties')\r\n    })\r\n    .catch(function(response) {\r\n      console.log(response.data);\r\n    });\r\n  };\r\n\r\n  $scope.emailLogin = function() {\r\n       $auth.login({ email: $scope.email, password: $scope.password })\r\n         .then(function(response) {\r\n           $state.go('properties')\r\n         })\r\n         .catch(function(response) {\r\n           console.log(response);\r\n           $scope.errorMessage = {};\r\n           $scope.loginForm[\"email\"].$setValidity('server', false);\r\n           $scope.errorMessage[\"email\"] = response.data.message;\r\n         });\r\n     };\r\n}\r\n\r\n\r\n\r\nreturn{\r\n  restrict: 'AE',\r\n  controller: controller,\r\n  templateUrl: '../src/view/template/login_template.html'\r\n\r\n}\r\n\r\n\r\n})\r\n","angular.module('mgmtApp').directive('logoutDirective', function(){\r\n\r\nvar controller = function($scope, $auth, $window, $state){\r\n  $scope.logout = function(){\r\n    $auth.logout();\r\n    $state.go('home');\r\n  }\r\n}\r\n\r\n\r\n\r\nreturn{\r\n  restrict: 'AE',\r\n  controller: controller,\r\n  template: '<button class=\"logout-btn\" type=\"button\" ng-click=\"logout()\">logout</button>'\r\n\r\n}\r\n\r\n\r\n})\r\n","angular.module('mgmtApp').directive('propertyForm', function(){\r\n\r\nvar controller = function($scope){\r\n\r\n}\r\n\r\n\r\n\r\nreturn{\r\n  restrict: 'AE',\r\n  controller: controller,\r\n  templateUrl: '../src/view/template/propertyForm_template.html'\r\n\r\n}\r\n\r\n\r\n})\r\n","angular.module('mgmtApp').directive('propertySettings', function($stateParams){\r\n\r\nvar controller = function($scope, mainService, $window){\r\n  if (!$stateParams.propertyId) {\r\n   $scope.propertyId = $window.localStorage.propertyId\r\n } else {\r\n   $scope.propertyId = $stateParams.propertyId\r\n }\r\nmainService.getPropertySettings($scope.propertyId).then(function(res){\r\n  $scope.propertyCheckBox = {\r\n        value1 : res[0]['receive_text'],\r\n        value2 : res[0]['receive_email'],\r\n        value3 : res[0]['receive_weather']\r\n}\r\n\r\n})\r\n\r\n\r\n\r\nconsole.log($scope.propertyId);\r\n$scope.update = function(){\r\n  $scope.property_settings = {\r\n    text: $scope.propertyCheckBox.value1,\r\n    email: $scope.propertyCheckBox.value2,\r\n    weather: $scope.propertyCheckBox.value3\r\n  }\r\n  mainService.updatePropertySettings($scope.propertyId, $scope.property_settings).then(function(res){\r\n\r\n  })\r\n }\r\n}\r\n\r\n\r\n\r\nreturn{\r\n  restrict: 'AE',\r\n  controller: controller,\r\n  templateUrl: '../src/view/template/propertySettings_template.html'\r\n\r\n}\r\n\r\n\r\n})\r\n","angular.module('mgmtApp')\r\n .directive('serverError', function() {\r\n   return {\r\n       restrict: 'A',\r\n       require: 'ngModel',\r\n       link: function(scope, element, attrs, ctrl) {\r\n         element.on('keydown', function() {\r\n           ctrl.$setValidity('server', true)\r\n         });\r\n       }\r\n   }\r\n });\r\n","angular.module('mgmtApp').directive('signupDirective', function(){\r\n\r\nvar controller = function($scope, $auth, $state){\r\n    $scope.phoneNumberStyle = function(e){\r\n\r\n   if ($scope.phone.length === 1) {\r\n     $scope.phone = '(' + $scope.phone\r\n   }\r\n   if (!Number.isInteger(Number(e.key))) {\r\n     $scope.phone = $scope.phone.split('').splice(0,$scope.phone.length - 1).join('')\r\n   }\r\n   if ($scope.phone.length === 4) {\r\n     $scope.phone = $scope.phone + ')'\r\n   }\r\n   if ($scope.phone.length === 8) {\r\n     $scope.phone = $scope.phone + '-'\r\n   }\r\n   if ($scope.phone.length === 14) {\r\n     $scope.phone = $scope.phone.split('').splice(0,$scope.phone.length - 1).join('')\r\n   }\r\n }\r\n\r\n  $scope.signUp = function() {\r\n    var user = {\r\n      firstName: $scope.firstName,\r\n      lastName: $scope.lastName,\r\n      email: $scope.email,\r\n      password: $scope.password,\r\n      phone: $scope.phone\r\n    };\r\n\r\n    console.log(user);\r\n    $auth.signup(user)\r\n      .then(function(response){\r\n        //console.log(response.data);\r\n        $auth.login({ email: $scope.email, password: $scope.password })\r\n          .then(function(response) {\r\n            $state.go('properties')\r\n          })\r\n      })\r\n      .catch(function(response){\r\n        //console.log(response.data);\r\n        $scope.errorMessage = {};\r\n        $scope.loginForm[\"email\"].$setValidity('server', false);\r\n        $scope.errorMessage[\"email\"] = response.data.message;\r\n      });\r\n\r\n  }\r\n  $scope.showSignUp = function () {\r\n      $scope.modalSignUpFunc = !$scope.modalSignUpFunc;\r\n      console.log('firing')\r\n    }\r\n}\r\n\r\n\r\n\r\nreturn{\r\n  restrict: 'AE',\r\n  controller: controller,\r\n  templateUrl: '../src/view/template/signup_template.html'\r\n\r\n}\r\n\r\n\r\n})\r\n","angular.module('mgmtApp').directive('taskSelection', function(){\r\n\r\nvar controller = function($scope){\r\n\r\n}\r\n\r\n\r\n\r\nreturn{\r\n  restrict: 'AE',\r\n  controller: controller,\r\n  templateUrl: '../src/view/template/taskSelection_template.html'\r\n\r\n}\r\n\r\n\r\n})\r\n","angular.module('mgmtApp')\r\n.service('mainService', function($http){\r\n\r\n//////////////////////////\r\n  this.getProperties = function(token){\r\n    return $http({\r\n      method: 'GET',\r\n      url: '/properties/' + token\r\n    }).then(function(res){\r\n      return res.data;\r\n    })\r\n  }\r\n  this.createProperty = function(property){\r\n    return $http({\r\n      method: 'POST',\r\n      url:'/properties',\r\n      data: property\r\n    }).then(function(res){\r\n      return res.data;\r\n    })\r\n  }\r\n\r\n  this.getDefaultTasks = function(propertyId){\r\n    return $http({\r\n      method: 'GET',\r\n      url: '/defaulttasks/' + propertyId\r\n    }).then(function(res){\r\n      return res.data;\r\n    })\r\n  }\r\n\r\n  this.insertTasks = function(tasks) {\r\n    return $http({\r\n      method: 'POST',\r\n      url: '/maintenancetasks',\r\n      data: tasks\r\n    }).then(function(res){\r\n      return res;\r\n    })\r\n  }\r\n\r\n  this.updatePropertySettings = function(propertyId, property_settings){\r\n    return $http({\r\n      method: 'PUT',\r\n      url: '/propertySettings/' + propertyId,\r\n      data: property_settings\r\n    }).then(function(res){\r\n      return res;\r\n    })\r\n  }\r\n\r\n  this.getPropertySettings = function(propertyId){\r\n    return $http({\r\n      method: 'GET',\r\n      url: '/propertySettings/' + propertyId\r\n    }).then(function(res){\r\n      return res.data;\r\n    })\r\n  }\r\n\r\n  this.getPropertyTasks = function(propertyId){\r\n    return $http({\r\n      method: 'GET',\r\n      url: '/maintenancetasks/' + propertyId\r\n    }).then(function(res){\r\n      return res.data;\r\n    })\r\n  }\r\n\r\n  this.createCustomTask = function(task) {\r\n    return $http({\r\n      method: 'POST',\r\n      url: '/createCustomTask',\r\n      data: task\r\n    }).then(function(res){\r\n      return res;\r\n    })\r\n  }\r\n  this.done = function(propertymaintenanceid, alertid){\r\n    return $http({\r\n      method: 'PUT',\r\n      url: '/maintenancetasks/' + propertymaintenanceid,\r\n      data: {alertid: alertid}\r\n    }).then(function(res){\r\n      return res;\r\n    })\r\n  }\r\n  this.snooze = function(alertid) {\r\n    return $http({\r\n      method: 'PUT',\r\n      url: '/alerts/' + alertid\r\n      // data: {alertid: alertid}\r\n    }).then(function(res) {\r\n      return res;\r\n    })\r\n  }\r\n  this.deleteProperty = function(propertyId){\r\n    return $http({\r\n      method: 'DELETE',\r\n      url: '/property/' + propertyId\r\n    }).then(function(res){\r\n      return res\r\n    })\r\n  }\r\n  this.getUserById = function(token){\r\n    return $http({\r\n      method: 'GET',\r\n      url: '/users/' + token\r\n    }).then(function(res){\r\n      return res.data;\r\n    })\r\n  }\r\n  this.updateFirstName = function(id, newFirstName){\r\n    return $http({\r\n      method: 'PUT',\r\n      url: '/users/firstName/'+ id,\r\n      data: {newFirstName: newFirstName}\r\n    }).then(function(res){\r\n      return res;\r\n    })\r\n  }\r\n  this.editTask = function(propertymaintenanceid, task){\r\n    return $http({\r\n      method: 'PUT',\r\n      url: '/tasksettings/' + propertymaintenanceid,\r\n      data: task\r\n    }).then(function(res){\r\n      return res;\r\n    })\r\n  }\r\n  this.updateLastName = function(id, newLastName){\r\n    return $http({\r\n      method: 'PUT',\r\n      url: '/users/lastName/'+ id,\r\n      data: {newLastName: newLastName}\r\n    }).then(function(res){\r\n      return res;\r\n    })\r\n  }\r\n  this.updatePhone = function(id, newPhone){\r\n    return $http({\r\n      method: 'PUT',\r\n      url: '/users/phone/'+ id,\r\n      data: {newPhone: newPhone}\r\n    }).then(function(res){\r\n      return res;\r\n    })\r\n  }\r\n  this.updatePassword = function(id, newPassword){\r\n    return $http({\r\n      method: 'PUT',\r\n      url: '/users/password/'+ id,\r\n      data: {newPassword: newPassword}\r\n    }).then(function(res){\r\n      return res;\r\n    })\r\n  }\r\n  this.deleteTask = function(propertymaintenanceid) {\r\n    return $http({\r\n      method: 'DELETE',\r\n      url: '/maintenancetask/'+propertymaintenanceid\r\n    }).then(function(res){\r\n      return res;\r\n    })\r\n  }\r\n\r\n\r\n})\r\n"]}
