{"version":3,"sources":["app.js","directive/createTask.js","directive/editTasks.js","directive/editTasksForm.js","directive/header.js","directive/login.js","directive/logout.js","directive/propertyForm.js","directive/propertySettings.js","directive/serverError.js","directive/signup.js","directive/taskSelection.js","controllers/contactCtrl.js","controllers/createPropertyCtrl.js","controllers/homeCtrl.js","controllers/mainAlertsCtrl.js","controllers/propertiesCtrl.js","controllers/userSettingsCtrl.js","services/mainService.js"],"names":["angular","module","config","$stateProvider","$urlRouterProvider","$authProvider","otherwise","state","url","controller","templateUrl","restricted","params","propertyId","loginUrl","signUpUrl","facebook","clientId","responseType","name","authorizationEndpoint","redirectUri","window","location","origin","requiredUrlParams","scope","scopeDelimiter","display","oauthType","popupOptions","width","height","run","$rootScope","$state","$window","$auth","$on","e","to","isAuthenticated","preventDefault","transitionTo","go","directive","mainService","element","task","season","createTask","localStorage","dayInterval","createCustomTask","then","res","after","lastDate","outdoor","notes","restrict","link","$stateParams","$scope","editFormVisibility","taskOverlayVisibility","getPropertyTasks","map","currentValue","nextdate","substr","lastdate","tasks","deleteTask","propertymaintenanceid","filter","newTask","data","push","editTaskObj","maintName","editTask","inactive","nextDate","$","document","ready","click","toggleClass","showLogin","modalFunc","console","log","menuShowing","toggleMenu","animationEnd","addClass","one","removeClass","prev","find","closeMenu","event","toState","toParams","fromState","fromParams","options","current","viewname","authenticate","provider","response","catch","emailLogin","login","email","password","errorMessage","loginForm","$setValidity","message","logout","template","getPropertySettings","propertyCheckBox","value1","value2","value3","update","property_settings","text","weather","updatePropertySettings","require","attrs","ctrl","on","phoneNumberStyle","phone","length","Number","isInteger","key","split","splice","join","signUp","user","firstName","lastName","signup","showSignUp","modalSignUpFunc","propertyFromVisibility","taskSelectionVisibility","customTaskVisibility","property","token","satellizer_token","typeId","send","createProperty","getDefaultTasks","createTasks","selectedTask","selected","insertTasks","status","alert","cnt","texts","each","html","slide","fadeIn","animate","opacity","fadeOut","propertyTasks","done","alertid","snooze","$swipe","propDeleteButtonVisibility","propDeleteConfirmVisiblity","getProperties","properties","deleteProperty","currentProp","id","getUserById","updateFirstName","newFirstName","firstname","firstNameEdit","updateLastName","newLastName","last_name","lastNameEdit","newPhone","updatePhone","replace","phone_number","phoneEdit","updatePassword","newPassword","service","$http","method"],"mappings":"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","file":"all.js","sourcesContent":["\nangular.module('mgmtApp', ['ui.router', 'satellizer', 'ngAnimate', 'ngTouch'])\n.config(function($stateProvider, $urlRouterProvider, $authProvider) {\n  $urlRouterProvider.otherwise('/');\n  $stateProvider\n\n  .state('home', {\n    url: \"/\" ,\n    controller:  'homeCtrl',\n    templateUrl: '../src/view/home.html',\n    restricted: false\n  })\n  .state('properties', {\n    url: \"/properties\" ,\n    controller:  'propertiesCtrl',\n    templateUrl: '../src/view/properties.html',\n    restricted: true\n  })\n  .state('createProperty', {\n    url: \"/createProperty\",\n    controller: 'createPropertyCtrl',\n    templateUrl: '../src/view/createProperty.html',\n    restricted: true\n  })\n  .state('mainAlerts', {\n    url: \"/mainAlerts/\",\n    controller: 'mainAlertsCtrl',\n    templateUrl: '../src/view/mainAlerts.html',\n    restricted: true,\n    params: {propertyId: null}\n  })\n  .state('userSettings', {\n    url: \"/userSettings\",\n    controller: 'userSettingsCtrl',\n    templateUrl: '../src/view/userSettings.html',\n    restricted: true\n  })\n  .state('propertySettings', {\n    url: \"/propertySettings\",\n    templateUrl: '../src/view/propertySettings.html',\n    restricted: true,\n    params: {propertyId: null}\n  })\n  .state('contact', {\n    url: \"/contact\",\n    controller: 'contactCtrl',\n    templateUrl: '../src/view/contact.html',\n    restricted: false\n  })\n  .state('login', {\n    url: \"/login\",\n    templateUrl: '../src/view/login.html',\n    restricted: false\n  })\n  .state('signup', {\n    url: \"/signup\",\n    templateUrl: '../src/view/signup.html',\n    restricted: false\n  })\n  $authProvider.loginUrl = '/auth/login';\n  $authProvider.signUpUrl = '/auth/signup';\n  $authProvider.facebook({\n    clientId: '1730897763901303',\n    responseType: 'code',\n    name: 'facebook',\n    url: '/auth/facebook',\n    authorizationEndpoint: 'https://www.facebook.com/v2.5/dialog/oauth',\n    redirectUri: window.location.origin + '/properties',\n    requiredUrlParams: ['scope'],\n    scope: ['email'],\n    scopeDelimiter: ',',\n    display: 'popup',\n    oauthType: '2.0',\n    popupOptions: { width: 580, height: 400 }\n  });\n  })\n   .run(function($rootScope, $state, $window, $auth){\n     $rootScope.$on('$stateChangeStart', function(e, to) {\n      //  console.log('$auth.isAuthenticated',$auth.isAuthenticated());\n      //  console.log('$window.localStorage',$window.localStorage);\n       if (!to.restricted) {\n         return;\n       }\n\n       if ($auth.isAuthenticated()){\n         return;\n       }\n       else {\n         e.preventDefault();\n         $state.transitionTo('login');\n         $state.go('login');\n       }\n\n\n     });\n})\n","angular.module('mgmtApp').directive('createTask', function(mainService,$window){\n\nvar controller = function(scope, element){\n  scope.task = {\n    season: 'Monthly'\n  }\n\n  scope.createTask = function(propertyId,task) {\n    if(!propertyId){\n      task.propertyId = $window.localStorage.propertyId;\n    }\n    else {\n      task.propertyId = propertyId\n    }\n\n    switch (task.season) {\n      case 'Monthly':\n          task.dayInterval = 30;\n          break;\n      case 'Quarterly':\n          task.dayInterval = 90;\n          break;\n      case 'Biannually':\n          task.dayInterval = 182;\n          break;\n      case 'Annually':\n          task.dayInterval = 365;\n          break;\n      default:\n          task.dayInterval = task.dayInterval\n      }\n\n    mainService.createCustomTask(task).then(function(res){\n\n      element.after('<div class=\"custom-task\"><span>'+scope.task.name+'</span><span>'+scope.task.lastDate+'</span><span>'+scope.task.season+'</span><span>'+scope.task.dayInterval+'</span><span>'+scope.task.outdoor+'</span><span>'+scope.task.notes+'</span></div>')\n\n      scope.task = {\n        name: null,\n        season: null,\n        lastDate: null,\n        dayInterval: null,\n        outdoor: false,\n        notes: null\n      }\n    })\n\n  }\n}\n\n\n\nreturn{\n  restrict: 'AE',\n  scope: {\n    propertyId: '='\n  },\n  templateUrl: '../src/view/template/createTask_template.html',\n  link: controller\n\n}\n\n\n})\n","angular.module('mgmtApp').directive('editTasks', function($stateParams){\n\nvar controller = function($scope, mainService, $window){\n  if (!$stateParams.propertyId) {\n   $scope.propertyId = $window.localStorage.propertyId\n }\n else {\n   $scope.propertyId = $stateParams.propertyId\n }\n\n $scope.editFormVisibility = false;\n $scope.taskOverlayVisibility = false;\n\n mainService.getPropertyTasks($scope.propertyId).then(function(res){\n   res.map(function(currentValue){\n     currentValue.nextdate = currentValue.nextdate.substr(0,10);\n     currentValue.lastdate = currentValue.lastdate.substr(0,10);\n   })\n   $scope.tasks = res;\n })\n\n  $scope.deleteTask = function(propertymaintenanceid){\n    mainService.deleteTask(propertymaintenanceid).then(function(res){\n      $scope.tasks = $scope.tasks.filter(function(currentValue){\n        return currentValue.propertymaintenanceid !== propertymaintenanceid;\n      })\n    })\n  }\n\n  $scope.createTask = function(propertyId,task) {\n    if(!propertyId){\n      task.propertyId = $window.localStorage.propertyId;\n    }\n    else {\n      task.propertyId = propertyId\n    }\n\n    switch (task.season) {\n      case 'Monthly':\n          task.dayInterval = 30;\n          break;\n      case 'Quarterly':\n          task.dayInterval = 90;\n          break;\n      case 'Biannually':\n          task.dayInterval = 182;\n          break;\n      case 'Annually':\n          task.dayInterval = 365;\n          break;\n      default:\n          task.dayInterval = task.dayInterval\n      }\n\n    mainService.createCustomTask(task).then(function(res){\n      var newTask = res.data[0]\n      newTask[\"dayinterval\"] = newTask[\"day_interval\"];\n      newTask[\"nextdate\"] = newTask[\"next_date\"].substr(0,10);\n      newTask[\"lastdate\"] = newTask[\"last_date\"].substr(0,10);\n      delete newTask[\"next_date\"];\n      delete newTask[\"last_date\"];\n\n      $scope.tasks.push(newTask)\n\n      $scope.newTask = {\n        name: null,\n        season: null,\n        lastDate: null,\n        dayInterval: null,\n        outdoor: false,\n        notes: null\n      }\n    })\n  }\n\n}\n\n\n\nreturn{\n  restrict: 'AE',\n  controller: controller,\n  templateUrl: '../src/view/template/editTasks_template.html'\n\n}\n\n\n})\n","angular.module('mgmtApp').directive('editTasksForm', function(mainService){\n\nvar link = function(scope){\n  scope.editTaskObj = {};\n  scope.editTaskObj.maintName = scope.task.name;\n\n  scope.editTask = function(task){\n    if (!task) {\n      task = {};\n    }\n    // task[\"maintName\"] = scope.task.name;\n    task[\"inactive\"] = scope.task.inactive;\n    task[\"outdoor\"] = scope.task.outdoor;\n    task[\"season\"] = scope.task.season;\n    task[\"dayInterval\"] = scope.task.dayInterval;\n    task[\"notes\"] = scope.task.notes;\n    mainService.editTask(scope.task.propertymaintenanceid, task).then(function(res){\n      if (res) {\n        scope.task.name = res.data[0][\"name\"]\n\n        scope.task.lastdate = res.data[0][\"last_date\"].substr(0,10)\n\n        scope.task.nextdate = res.data[0][\"next_date\"].substr(0,10)\n\n        if(!scope.editTaskObj) {\n          scope.editTaskObj = {};\n        }\n\n        scope.editTaskObj.maintName = '';\n        scope.editTaskObj.lastDate = '';\n        scope.editTaskObj.nextDate = '';\n        scope.editTaskObj.season = '';\n        scope.editTaskObj.dayInterval = '';\n        scope.editTaskObj.outdoor = '';\n        scope.editTaskObj.notes = '';\n        scope.editTaskObj.inactive = '';\n      }\n\n    })\n  }\n\n}\n\n\n\nreturn{\n  restrict: 'AE',\n  scope: {\n    task: '=',\n    taskOverlayVisibility: '=',\n    editFormVisibility: '='\n  },\n  templateUrl: '../src/view/template/editTasksForm_template.html',\n  link: link\n\n}\n\n\n})\n","angular.module('mgmtApp')\n.directive('headerDirective', function() {\n  var controller = function($scope, $state, mainService, $rootScope) {\n\n    // menu icon animation\n\n    $(document).ready(function(){\n\t$('#nav-icon3').click(function(){\n\t\t$(this).toggleClass('open');\n\t});\n});\n\n\n\n    // menu dropdown animationm\n    $scope.showLogin = function () {\n        $scope.modalFunc = !$scope.modalFunc;\n        console.log('firing')\n      }\n      $scope.menuShowing = false;\n      $scope.toggleMenu = function() {\n        var animationEnd = 'webkitAnimationEnd mozAnimationEnd MSAnimationEnd oanimationend animationend';\n        if (!$scope.menuShowing) {\n            $('div.menu').addClass('animated slideInDown').one(animationEnd, function () {\n              $(this).removeClass('animated slideInDown')\n            });\n        }\n        else {\n              $('div.menu').addClass('animated slideOutUp').one(animationEnd, function () {\n                $(this).prev().find('#nav-icon3').removeClass('open')\n                $(this).removeClass('animated slideOutUp')\n\n            })\n        }\n        $scope.menuShowing = !$scope.menuShowing;\n        // console.log($scope.menuShowing);\n      }\n      $scope.closeMenu = function() {\n        var animationEnd = 'webkitAnimationEnd mozAnimationEnd MSAnimationEnd oanimationend animationend';\n        if ($scope.menuShowing) {\n          $('div.menu').addClass('animated slideOutUp').one(animationEnd, function () {\n            $(this).prev().find('#nav-icon3').removeClass('open')\n            $(this).removeClass('animated slideOutUp')\n\n        });\n        }\n        $scope.menuShowing = false;\n      }\n\n\n      $rootScope.$on('$stateChangeSuccess', function(event, toState, toParams, fromState, fromParams, options){\n        //  console.log($state.current.name);\n          switch($state.current.name) {\n              case 'home':\n                  $scope.viewname = '';\n                  break;\n              case 'properties':\n                  $scope.viewname = 'Your Properties';\n                  break;\n              case 'createProperty':\n                  $scope.viewname = 'Property Create';\n                  break;\n              case 'mainAlerts':\n                  $scope.viewname = 'Upcoming Maintenance';\n                  break;\n              case 'userSettings':\n                  $scope.viewname = 'User Settings';\n                  break;\n              case 'propertySettings':\n                  $scope.viewname = 'Property Settings';\n                  break;\n              case 'contact':\n                  $scope.viewname = 'About';\n                  break;\n              case 'login':\n                  $scope.viewname = 'Login';\n                  break;\n              case 'signup':\n                  $scope.viewname = 'Signup';\n                  break;\n              default:\n                  $scope.viewname = ''\n          }\n       })\n\n\n     };\n\n\n\n\n  return {\n    restrict: 'AE',\n    controller: controller,\n    templateUrl: '../src/view/template/header.html'\n  }\n\n\n})\n","angular.module('mgmtApp').directive('loginDirective', function(){\n\nvar controller = function($scope, $window, $state, $auth){\n  $scope.authenticate = function(provider) {\n    // localStorage.clear();\n    $auth.authenticate(provider)\n    .then(function(response){\n      // console.log(response.data);\n      $state.go('properties')\n    })\n    .catch(function(response) {\n      console.log(response.data);\n    });\n  };\n\n  $scope.emailLogin = function() {\n       $auth.login({ email: $scope.email, password: $scope.password })\n         .then(function(response) {\n           $state.go('properties')\n         })\n         .catch(function(response) {\n           console.log(response);\n           $scope.errorMessage = {};\n           $scope.loginForm[\"email\"].$setValidity('server', false);\n           $scope.errorMessage[\"email\"] = response.data.message;\n         });\n     };\n}\n\n\n\nreturn{\n  restrict: 'AE',\n  controller: controller,\n  templateUrl: '../src/view/template/login_template.html'\n\n}\n\n\n})\n","angular.module('mgmtApp').directive('logoutDirective', function(){\n\nvar controller = function($scope, $auth, $window, $state){\n  $scope.logout = function(){\n    $auth.logout();\n    $state.go('home');\n  }\n}\n\n\n\nreturn{\n  restrict: 'AE',\n  controller: controller,\n  template: '<button class=\"logout-btn\" type=\"button\" ng-click=\"logout()\">logout</button>'\n\n}\n\n\n})\n","angular.module('mgmtApp').directive('propertyForm', function(){\n\nvar controller = function($scope){\n\n}\n\n\n\nreturn{\n  restrict: 'AE',\n  controller: controller,\n  templateUrl: '../src/view/template/propertyForm_template.html'\n\n}\n\n\n})\n","angular.module('mgmtApp').directive('propertySettings', function($stateParams){\n\nvar controller = function($scope, mainService, $window){\n  if (!$stateParams.propertyId) {\n   $scope.propertyId = $window.localStorage.propertyId\n } else {\n   $scope.propertyId = $stateParams.propertyId\n }\nmainService.getPropertySettings($scope.propertyId).then(function(res){\n  $scope.propertyCheckBox = {\n        value1 : res[0]['receive_text'],\n        value2 : res[0]['receive_email'],\n        value3 : res[0]['receive_weather']\n}\n\n})\n\n$scope.update = function(){\n  $scope.property_settings = {\n    text: $scope.propertyCheckBox.value1,\n    email: $scope.propertyCheckBox.value2,\n    weather: $scope.propertyCheckBox.value3\n  }\n  mainService.updatePropertySettings($scope.propertyId, $scope.property_settings).then(function(res){\n\n  })\n }\n}\n\n\n\nreturn{\n  restrict: 'AE',\n  controller: controller,\n  templateUrl: '../src/view/template/propertySettings_template.html'\n\n}\n\n\n})\n","angular.module('mgmtApp')\n .directive('serverError', function() {\n   return {\n       restrict: 'A',\n       require: 'ngModel',\n       link: function(scope, element, attrs, ctrl) {\n         element.on('keydown', function() {\n           ctrl.$setValidity('server', true)\n         });\n       }\n   }\n });\n","angular.module('mgmtApp').directive('signupDirective', function(){\n\nvar controller = function($scope, $auth, $state){\n    $scope.phoneNumberStyle = function(e){\n\n   if ($scope.phone.length === 1) {\n     $scope.phone = '(' + $scope.phone\n   }\n   if (!Number.isInteger(Number(e.key))) {\n     $scope.phone = $scope.phone.split('').splice(0,$scope.phone.length - 1).join('')\n   }\n   if ($scope.phone.length === 4) {\n     $scope.phone = $scope.phone + ')'\n   }\n   if ($scope.phone.length === 8) {\n     $scope.phone = $scope.phone + '-'\n   }\n   if ($scope.phone.length === 14) {\n     $scope.phone = $scope.phone.split('').splice(0,$scope.phone.length - 1).join('')\n   }\n }\n\n  $scope.signUp = function() {\n    var user = {\n      firstName: $scope.firstName,\n      lastName: $scope.lastName,\n      email: $scope.email,\n      password: $scope.password,\n      phone: $scope.phone\n    };\n\n    console.log(user);\n    $auth.signup(user)\n      .then(function(response){\n        //console.log(response.data);\n        $auth.login({ email: $scope.email, password: $scope.password })\n          .then(function(response) {\n            $state.go('properties')\n          })\n      })\n      .catch(function(response){\n        //console.log(response.data);\n        $scope.errorMessage = {};\n        $scope.loginForm[\"email\"].$setValidity('server', false);\n        $scope.errorMessage[\"email\"] = response.data.message;\n      });\n\n  }\n  $scope.showSignUp = function () {\n      $scope.modalSignUpFunc = !$scope.modalSignUpFunc;\n      console.log('firing')\n    }\n}\n\n\n\nreturn{\n  restrict: 'AE',\n  controller: controller,\n  templateUrl: '../src/view/template/signup_template.html'\n\n}\n\n\n})\n","angular.module('mgmtApp').directive('taskSelection', function(){\n\nvar controller = function($scope){\n\n}\n\n\n\nreturn{\n  restrict: 'AE',\n  controller: controller,\n  templateUrl: '../src/view/template/taskSelection_template.html'\n\n}\n\n\n})\n","angular.module('mgmtApp')\n.controller('contactCtrl', function($scope, mainService){\n\n\n})\n","angular.module('mgmtApp')\n.controller('createPropertyCtrl', function($scope, mainService, $window, $state){\n\n  $scope.propertyFromVisibility = true;\n  $scope.taskSelectionVisibility = false;\n  $scope.customTaskVisibility = false;\n\n  $scope.property = {\n    token: $window.localStorage.satellizer_token,\n    typeId: 1\n  };\n\n  $scope.send = function(property){\n    mainService.createProperty(property).then(function(res){\n      $scope.propertyId = res[0][\"id\"]\n      $scope.propertyFromVisibility = false;\n      $scope.taskSelectionVisibility = true;\n\n      mainService.getDefaultTasks($scope.propertyId).then(function(res){\n        $scope.tasks = res;\n      })\n    });\n  }\n\n  $scope.createTasks = function(tasks) {\n    var selectedTask = tasks.filter(function(currentValue){\n      currentValue.propertyId = $scope.propertyId;\n      return currentValue.selected !== false;\n    })\n    mainService.insertTasks(selectedTask).then(function(res){\n      if (res.status === 201) {\n        console.log($scope.propertyId)\n        $state.go('mainAlerts', {propertyId: $scope.propertyId})\n      }\n      else {\n        alert('server error try resubmit')\n      }\n\n    })\n  }\n})\n","angular.module('mgmtApp')\n.controller('homeCtrl', function($scope, mainService){\n\n  var cnt=0, texts=[];\n\n  // save the texts in an array for re-use\n  $(\".textContent\").each(function() {\n    texts[cnt++]=$(this).html();\n  });\n  function slide() {\n    if (cnt>=texts.length) cnt=0;\n    $('#textMessage').html(texts[cnt++]);\n    $('#textMessage')\n      .fadeIn('slow').animate({opacity: 1.0}, 5000).fadeOut('slow',\n       function() {\n         return slide()\n       }\n    );\n  }\n  slide()\n\n})\n","angular.module('mgmtApp')\n.controller('mainAlertsCtrl', function($scope, mainService, $stateParams, $window){\n  if ($stateParams.propertyId) {\n    $window.localStorage.propertyId = $stateParams.propertyId;\n    $scope.propertyId = $stateParams.propertyId;\n  }\n  else if (!$stateParams.propertyId) {\n   $scope.propertyId = $window.localStorage.propertyId\n }\n\n  $scope.getPropertyTasks = function(propertyId){\n    mainService.getPropertyTasks(propertyId)\n    .then(function(res){\n      $scope.propertyTasks = res.filter(function(currentValue){\n        return currentValue.inactive === false;\n      });\n    })\n  }\n\n  $scope.getPropertyTasks($scope.propertyId)\n\n  $scope.done = function(propertymaintenanceid, alertid){\n    mainService.done(propertymaintenanceid, alertid)\n    .then(function(res){\n      $scope.getPropertyTasks($scope.propertyId)\n    })\n  }\n  $scope.snooze = function(alertid) {\n    mainService.snooze(alertid)\n    .then(function(res) {\n      $scope.getPropertyTasks($scope.propertyId)\n    })\n  }\n\n\n})\n","angular.module('mgmtApp')\n.controller('propertiesCtrl', function($scope, $window, mainService, $swipe){\n\n  $scope.propDeleteButtonVisibility = false;\n  $scope.propDeleteConfirmVisiblity = false;\n\n  $scope.getProperties = function(token){\n    mainService.getProperties(token)\n    .then(function(res){\n      $scope.properties = res;\n    })\n  }\n  $scope.getProperties($window.localStorage.satellizer_token)\n\n  $scope.deleteProperty = function(propertyId){\n    mainService.deleteProperty(propertyId).then(function(res){\n      $scope.properties = $scope.properties.filter(function(currentProp){\n        return currentProp.id !== propertyId\n      });\n    })\n  }\n\n})\n","angular.module('mgmtApp')\n.controller('userSettingsCtrl', function($scope, mainService, $window){\n\n  $scope.getUserById = function(token){\n    mainService.getUserById(token)\n    .then(function(res){\n      $scope.user = res[0];\n    })\n  }\n  $scope.getUserById($window.localStorage.satellizer_token)\n\n  $scope.updateFirstName = function(newFirstName){\n    mainService.updateFirstName($scope.user.id, newFirstName)\n    .then(function (res){\n     $scope.user.firstname = newFirstName;\n     $scope.firstNameEdit = false;\n     $scope.newFirstName = \"\";\n    })\n  }\n  $scope.updateLastName = function(newLastName){\n    mainService.updateLastName($scope.user.id, newLastName)\n    .then(function (res){\n     $scope.user.last_name = newLastName;\n     $scope.lastNameEdit = false;\n     $scope.newLastName = \"\";\n    })\n  }\n/////////////////////edit phone number to (xXx)xXX-XXXX/////////////\n  $scope.phoneNumberStyle = function(e){\n\n     if ($scope.newPhone.length === 1) {\n       $scope.newPhone = '(' + $scope.newPhone\n     }\n     if (!Number.isInteger(Number(e.key))) {\n       $scope.newPhone = $scope.newPhone.split('').splice(0,$scope.newPhone.length - 1).join('')\n     }\n     if ($scope.newPhone.length === 4) {\n       $scope.newPhone = $scope.newPhone + ')'\n     }\n     if ($scope.newPhone.length === 8) {\n       $scope.newPhone = $scope.newPhone + '-'\n     }\n     if ($scope.newPhone.length === 14) {\n       $scope.newPhone = $scope.newPhone.split('').splice(0,$scope.newPhone.length - 1).join('')\n     }\n   }\n\n  $scope.updatePhone = function(newPhone){\n      newPhone = newPhone.replace(/\\D/g,'');\n    mainService.updatePhone($scope.user.id, newPhone)\n    .then(function (res){\n     $scope.user.phone_number = newPhone;\n     $scope.phoneEdit = false;\n     $scope.newPhone = \"\";\n    })\n  }\n\n  $scope.updatePassword = function(newPassword){\n    mainService.updatePassword($scope.user.id, newPassword)\n    .then(function (res){\n     $scope.user.password = newPassword;\n     $scope.newPassword = \"\";\n    })\n  }\n\n\n})\n","angular.module('mgmtApp')\n.service('mainService', function($http){\n\n//////////////////////////\n  this.getProperties = function(token){\n    return $http({\n      method: 'GET',\n      url: '/properties/' + token\n    }).then(function(res){\n      return res.data;\n    })\n  }\n  this.createProperty = function(property){\n    return $http({\n      method: 'POST',\n      url:'/properties',\n      data: property\n    }).then(function(res){\n      return res.data;\n    })\n  }\n\n  this.getDefaultTasks = function(propertyId){\n    return $http({\n      method: 'GET',\n      url: '/defaulttasks/' + propertyId\n    }).then(function(res){\n      return res.data;\n    })\n  }\n\n  this.insertTasks = function(tasks) {\n    return $http({\n      method: 'POST',\n      url: '/maintenancetasks',\n      data: tasks\n    }).then(function(res){\n      return res;\n    })\n  }\n\n  this.updatePropertySettings = function(propertyId, property_settings){\n    return $http({\n      method: 'PUT',\n      url: '/propertySettings/' + propertyId,\n      data: property_settings\n    }).then(function(res){\n      return res;\n    })\n  }\n\n  this.getPropertySettings = function(propertyId){\n    return $http({\n      method: 'GET',\n      url: '/propertySettings/' + propertyId\n    }).then(function(res){\n      return res.data;\n    })\n  }\n\n  this.getPropertyTasks = function(propertyId){\n    return $http({\n      method: 'GET',\n      url: '/maintenancetasks/' + propertyId\n    }).then(function(res){\n      return res.data;\n    })\n  }\n\n  this.createCustomTask = function(task) {\n    return $http({\n      method: 'POST',\n      url: '/createCustomTask',\n      data: task\n    }).then(function(res){\n      return res;\n    })\n  }\n  this.done = function(propertymaintenanceid, alertid){\n    return $http({\n      method: 'PUT',\n      url: '/maintenancetasks/' + propertymaintenanceid,\n      data: {alertid: alertid}\n    }).then(function(res){\n      return res;\n    })\n  }\n  this.snooze = function(alertid) {\n    return $http({\n      method: 'PUT',\n      url: '/alerts/' + alertid\n      // data: {alertid: alertid}\n    }).then(function(res) {\n      return res;\n    })\n  }\n  this.deleteProperty = function(propertyId){\n    return $http({\n      method: 'DELETE',\n      url: '/property/' + propertyId\n    }).then(function(res){\n      return res\n    })\n  }\n  this.getUserById = function(token){\n    return $http({\n      method: 'GET',\n      url: '/users/' + token\n    }).then(function(res){\n      return res.data;\n    })\n  }\n  this.updateFirstName = function(id, newFirstName){\n    return $http({\n      method: 'PUT',\n      url: '/users/firstName/'+ id,\n      data: {newFirstName: newFirstName}\n    }).then(function(res){\n      return res;\n    })\n  }\n  this.editTask = function(propertymaintenanceid, task){\n    return $http({\n      method: 'PUT',\n      url: '/tasksettings/' + propertymaintenanceid,\n      data: task\n    }).then(function(res){\n      return res;\n    })\n  }\n  this.updateLastName = function(id, newLastName){\n    return $http({\n      method: 'PUT',\n      url: '/users/lastName/'+ id,\n      data: {newLastName: newLastName}\n    }).then(function(res){\n      return res;\n    })\n  }\n  this.updatePhone = function(id, newPhone){\n    return $http({\n      method: 'PUT',\n      url: '/users/phone/'+ id,\n      data: {newPhone: newPhone}\n    }).then(function(res){\n      return res;\n    })\n  }\n  this.updatePassword = function(id, newPassword){\n    return $http({\n      method: 'PUT',\n      url: '/users/password/'+ id,\n      data: {newPassword: newPassword}\n    }).then(function(res){\n      return res;\n    })\n  }\n  this.deleteTask = function(propertymaintenanceid) {\n    return $http({\n      method: 'DELETE',\n      url: '/maintenancetask/'+propertymaintenanceid\n    }).then(function(res){\n      return res;\n    })\n  }\n\n\n})\n"]}