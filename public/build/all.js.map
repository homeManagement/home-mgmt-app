{"version":3,"sources":["app.js","controllers/contactCtrl.js","controllers/createPropertyCtrl.js","controllers/loginCtrl.js","controllers/mainAlertsCtrl.js","controllers/propertiesCtrl.js","controllers/propertySettingsCtrl.js","controllers/userSettingsCtrl.js","directive/login.js","services/mainService.js"],"names":["angular","module","config","$stateProvider","$urlRouterProvider","$authProvider","otherwise","state","url","controller","templateUrl","loginUrl","signUpUrl","facebook","clientId","responseType","name","authorizationEndpoint","requiredUrlParams","scope","scopeDelimiter","display","oauthType","popupOptions","width","height","run","$rootScope","$window","$auth","console","log","localStorage","currentUser","$scope","mainService","directive","authenticate","provider","then","response","emailLogin","login","email","password","JSON","stringify","data","user","parse","catch","errorMessage","forEach","message","field","loginForm","$setValidity","restrict","service","$http"],"mappings":"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","file":"all.js","sourcesContent":["\nangular.module('mgmtApp', ['ui.router', 'satellizer'])\n.config(function($stateProvider, $urlRouterProvider, $authProvider) {\n  $urlRouterProvider.otherwise('/');\n  $stateProvider\n  .state('login', {\n    url: \"/\",\n    controller: 'loginCtrl',\n    templateUrl: '../src/view/login.html'\n  })\n  .state('properties', {\n    url: \"/properties\" ,\n    controller:  'propertiesCtrl',\n    templateUrl: '../src/view/properties.html'\n  })\n  .state('createProperty', {\n    url: \"/createProperty\",\n    controller: 'createPropertyCtrl',\n    templateUrl: '../src/view/createProperty.html'\n  })\n  .state('mainAlerts', {\n    url: \"/mainAlerts\",\n    controller: 'mainAlertsCtrl',\n    templateUrl: '../src/view/mainAlerts.html'\n  })\n  .state('userSettings', {\n    url: \"/userSettings\",\n    controller: 'userSettingsCtrl',\n    templateUrl: '../src/view/userSettings.html'\n  })\n  .state('propertySettings', {\n    url: \"/propertySettings\",\n    controller: 'propertySettingsCtrl',\n    templateUrl: '../src/view/propertySettings.html'\n  })\n  .state('contact', {\n    url: \"/contact\",\n    controller: 'contactCtrl',\n    templateUrl: '../src/view/contact.html'\n  })\n  $authProvider.loginUrl = '/auth/login';\n  $authProvider.signUpUrl = '/auth/signup';\n  $authProvider.facebook({\n    clientId: '1730897763901303',\n    responseType: 'code',\n    name: 'facebook',\n    url: '/auth/facebook',\n    authorizationEndpoint: 'https://www.facebook.com/v2.5/dialog/oauth',\n    // redirectUri: window.location.origin + '/',\n    requiredUrlParams: ['scope'],\n    scope: ['email'],\n    scopeDelimiter: ',',\n    display: 'popup',\n    oauthType: '2.0',\n    popupOptions: { width: 580, height: 400 }\n  });\n  })\n   .run(function($rootScope, $window, $auth){\n      console.log($window.localStorage.currentUser);\n\n// angular.module('homeMgmt', ['satellizer'])\n// .config(function($authProvider) {\n//   $authProvider.loginUrl = '/auth/login';\n//   $authProvider.signUpUrl = '/auth/signup';\n//   $authProvider.facebook({\n//     clientId: '1730897763901303',\n//     responseType: 'code',\n//     name: 'facebook',\n//     url: '/auth/facebook',\n//     authorizationEndpoint: 'https://www.facebook.com/v2.5/dialog/oauth',\n//     // redirectUri: window.location.origin + '/',\n//     requiredUrlParams: ['scope'],\n//     scope: ['email'],\n//     scopeDelimiter: ',',\n//     display: 'popup',\n//     oauthType: '2.0',\n//     popupOptions: { width: 580, height: 400 }\n//   });\n//   })  .run(function($rootScope, $window, $auth){\n//       console.log($window.localStorage.currentUser);\n//\n// >>>>>>> master\n\n})\n","angular.module('mgmtApp')\n.controller('contactCtrl', function($scope, mainService){\n\n\n})\n","angular.module('mgmtApp')\n.controller('createPropertyCtrl', function($scope, mainService){\n\n\n})\n","angular.module('mgmtApp')\n.controller('loginCtrl', function($scope, mainService){\n\n\n})\n","angular.module('mgmtApp')\n.controller('mainAlertsCtrl', function($scope, mainService){\n\n\n})\n","angular.module('mgmtApp')\n.controller('propertiesCtrl', function($scope, mainService){\n\n\n})\n","angular.module('mgmtApp')\n.controller('propertySettingsCtrl', function($scope, mainService){\n\n\n})\n","angular.module('mgmtApp')\n.controller('userSettingsCtrl', function($scope, mainService){\n\n\n})\n","angular.module('homeMgmt').directive('loginDirective', function(){\n\nvar controller = function($scope, $auth){\n  $scope.authenticate = function(provider) {\n    // localStorage.clear();\n    $auth.authenticate(provider)\n    .then(function(response){\n      console.log(response);\n    })\n  };\n\n  $scope.emailLogin = function() {\n       $auth.login({ email: $scope.email, password: $scope.password })\n         .then(function(response) {\n           $window.localStorage.currentUser = JSON.stringify(response.data.user);\n           $rootScope.currentUser = JSON.parse($window.localStorage.currentUser);\n         })\n         .catch(function(response) {\n           $scope.errorMessage = {};\n           angular.forEach(response.data.message, function(message, field) {\n             $scope.loginForm[field].$setValidity('server', false);\n             $scope.errorMessage[field] = response.data.message[field];\n           });\n         });\n     };\n}\n\n\n\nreturn{\n  restrict: 'AE',\n  controller: controller,\n  templateUrl: '../src/view/template/login.html'\n\n}\n\n\n})\n","angular.module('mgmtApp')\n.service('mainService', function($http){\n\n\n\n})\n"]}